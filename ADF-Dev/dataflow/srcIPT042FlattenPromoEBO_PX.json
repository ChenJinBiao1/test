{
	"name": "srcIPT042FlattenPromoEBO_PX",
	"properties": {
		"folder": {
			"name": "04-CurrentPriceInbound"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Xi_IPTPromo",
						"type": "DatasetReference"
					},
					"name": "XiIPTPromo"
				},
				{
					"dataset": {
						"referenceName": "AB_IPTCGI_OPORI_OUTB_PMOTN_REQ_GRP_T_042",
						"type": "DatasetReference"
					},
					"name": "IPAOPORI"
				},
				{
					"dataset": {
						"referenceName": "AB_IPTEGI_OPORI_OUTB_PMOTN_REQ_GRP_T_042",
						"type": "DatasetReference"
					},
					"name": "IPEOPORI"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_FF_ESBPromoUpdate",
						"type": "DatasetReference"
					},
					"name": "FFESBPromoUpdate"
				},
				{
					"dataset": {
						"referenceName": "AB_srcIPT042FlattenPromoEBO_PX_IPTPromo_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSIPTPromo"
				},
				{
					"dataset": {
						"referenceName": "AB_srcIPT044FlattenDeletePromoEBO_PX_FF_RejOPORI_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFRejOPORI"
				}
			],
			"transformations": [
				{
					"name": "XIPTPromo"
				},
				{
					"name": "xoESBPromo"
				},
				{
					"name": "xoIPTPromo"
				},
				{
					"name": "FOPORI"
				},
				{
					"name": "LOPORI"
				},
				{
					"name": "outOPORI"
				},
				{
					"name": "rejOPORI"
				},
				{
					"name": "Match"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pUser as string ('PIPT041U'),",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          PmotnId as string,",
				"          BrdId as string,",
				"          MktId as string,",
				"          LocNbr as string,",
				"          StrDt as string,",
				"          EndDate as string,",
				"          Timestamp as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> XiIPTPromo",
				"source(output(",
				"          PMOTN_REQ_ID_S as string,",
				"          PMOTN_GRP_ID_S as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPAOPORI",
				"source(output(",
				"          PMOTN_REQ_ID_S as string,",
				"          PMOTN_GRP_ID_S as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPEOPORI",
				"XiIPTPromo derive(EXTL_PMOTN_IND = 'N',",
				"          EXTL_PRC_SYS_STAT_CD = '01',",
				"          LST_UPDT_USER_ID = $pUser,",
				"          LST_UPDT_DTTM = currentDate()) ~> XIPTPromo",
				"XIPTPromo select(mapColumn(",
				"          PmotnId,",
				"          BrdId,",
				"          MktId,",
				"          LocNbr,",
				"          StrDt,",
				"          EndDate,",
				"          Timestamp",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoESBPromo",
				"XIPTPromo select(mapColumn(",
				"          PMOTN_REQ_ID = PmotnId,",
				"          PMOTN_END_DT = EndDate,",
				"          EXTL_PMOTN_IND,",
				"          EXTL_PRC_SYS_STAT_CD,",
				"          LST_UPDT_USER_ID,",
				"          LST_UPDT_DTTM",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoIPTPromo",
				"IPAOPORI, IPEOPORI union(byName: true)~> FOPORI",
				"xoIPTPromo, FOPORI lookup(PMOTN_REQ_ID == PMOTN_GRP_ID_S,",
				"     multiple: true,",
				"     broadcast: 'auto',",
				"     pickup: 'any')~> LOPORI",
				"split1@Yes select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_END_DT,",
				"          EXTL_PMOTN_IND,",
				"          EXTL_PRC_SYS_STAT_CD,",
				"          LST_UPDT_USER_ID,",
				"          LST_UPDT_DTTM",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> outOPORI",
				"split1@No select(mapColumn(",
				"          PMOTN_REQ_ID,",
				"          PMOTN_END_DT,",
				"          EXTL_PMOTN_IND,",
				"          EXTL_PRC_SYS_STAT_CD,",
				"          LST_UPDT_USER_ID,",
				"          LST_UPDT_DTTM",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> rejOPORI",
				"LOPORI derive(IsMatch = isMatch()) ~> Match",
				"Match split(IsMatch==true(),",
				"     disjoint: false) ~> split1@(Yes, No)",
				"xoESBPromo sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('FF_ESBPromoUpdate.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFESBPromoUpdate",
				"outOPORI sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PMOTN_REQ_ID_S as string,",
				"          PMOTN_END_DT as string,",
				"          EXTL_PMOTN_IND as string,",
				"          EXTL_PRC_SYS_STAT_CD as string,",
				"          LST_UPDT_USER_ID as string,",
				"          LST_UPDT_DTTM as string",
				"     ),",
				"     partitionFileNames:[(concat('srcIPT042FlattenPromoEBO_PX.IPTPromo.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> DSIPTPromo",
				"rejOPORI sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('srcIPT044FlattenDeletePromoEBO_PX.FF_RejOPORI.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFRejOPORI"
			]
		}
	}
}