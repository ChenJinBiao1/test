{
	"name": "xfmIPT223E_RPMApprPromo_Item_PX_copy1",
	"properties": {
		"folder": {
			"name": "22-E2EPricingValidations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT221F_CombineRPMLoadFiles_DS_ComplexPromo_combine",
						"type": "DatasetReference"
					},
					"name": "DSComplexPromo"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT_TPROO_UHILV_OPORI_223E",
						"type": "DatasetReference"
					},
					"name": "IPTTPROOUHILVOPORI"
				},
				{
					"dataset": {
						"referenceName": "AB_RPM_AllDiv_223E",
						"type": "DatasetReference"
					},
					"name": "RPMAllDiv"
				},
				{
					"dataset": {
						"referenceName": "AB_RPM_TSPCT_223E",
						"type": "DatasetReference"
					},
					"name": "RPMTSPCT"
				},
				{
					"dataset": {
						"referenceName": "AB_RPM_ALLStore_223E",
						"type": "DatasetReference"
					},
					"name": "RPMALLStore"
				},
				{
					"dataset": {
						"referenceName": "AB_RPM_PROMO_223E",
						"type": "DatasetReference"
					},
					"name": "RPMPROMO"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT223E_RPMApprPromo_Item_PX_FF_Notin_Staging_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFNotinStaging"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT22_ApprovedPromo_Success_RPM_Item_Loc_ASIA",
						"type": "DatasetReference"
					},
					"name": "ApprPromoSuccessItem"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT223_ApprovedPromo_Errors_RPM_Item_Loc_ASIA",
						"type": "DatasetReference"
					},
					"name": "ApprPromoErrorItem"
				}
			],
			"transformations": [
				{
					"name": "LBrdMktChnl"
				},
				{
					"name": "fiBrdMktChnl"
				},
				{
					"name": "loBrdMktChnl"
				},
				{
					"name": "LTSPCTkeys"
				},
				{
					"name": "loTSPCTCompltArejects"
				},
				{
					"name": "split1"
				},
				{
					"name": "LAllStore"
				},
				{
					"name": "LDiv"
				},
				{
					"name": "LPROMOkeys"
				},
				{
					"name": "AllStore"
				},
				{
					"name": "Div"
				},
				{
					"name": "PROMOkeys"
				},
				{
					"name": "union1"
				},
				{
					"name": "xAddDesc"
				},
				{
					"name": "IsMatch"
				},
				{
					"name": "split2"
				},
				{
					"name": "select1"
				},
				{
					"name": "IsMatch2"
				},
				{
					"name": "IsMatch3"
				},
				{
					"name": "IsMatch4"
				},
				{
					"name": "split3"
				},
				{
					"name": "split4"
				},
				{
					"name": "split5"
				},
				{
					"name": "NStore"
				},
				{
					"name": "NDiv"
				},
				{
					"name": "Nrest"
				},
				{
					"name": "union2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pBrandId as integer (1),",
				"     pChnlId as integer (1),",
				"     pMarketId as string ('8'),",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          PROMO_ID as integer,",
				"          PROMO_NAME as string,",
				"          COMP_DISPLAY_ID as string,",
				"          PROMO_COMP_ID as integer,",
				"          PROMO_COMP_DETAIL_ID as integer,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID as string,",
				"          THRESHOLD_ID as integer,",
				"          THRESHOLD_DISPLAY_ID as string,",
				"          MERCH_TYPE as integer,",
				"          DIVISION as integer,",
				"          GROUP_NO as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          DIFF_ID as string,",
				"          ITEM as string,",
				"          ATTRIBUTE_1 as string,",
				"          ATTRIBUTE_2 as string,",
				"          ATTRIBUTE_3 as string,",
				"          ZONE_NODE_TYPE as integer,",
				"          ZONE_ID as integer,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          IGNORE_CONSTRAINTS as integer,",
				"          THRESHOLD_NAME as string,",
				"          CURRENCY_CODE as string,",
				"          QUALIFICATION_TYPE as integer,",
				"          THRESHOLD_TYPE as integer,",
				"          THRESHOLD_AMOUNT as decimal(15,2),",
				"          THRESHOLD_CURRENCY as string,",
				"          THRESHOLD_QUANTITY as decimal(15,2),",
				"          CHANGE_TYPE as string,",
				"          CHANGE_AMOUNT as decimal(15,2),",
				"          CHANGE_CURRENCY as string,",
				"          CHANGE_PERCENT as decimal(15,2),",
				"          CHANGE_UOM as string,",
				"          AUTO_APPROVE_IND as integer,",
				"          PROCESS_ID as integer,",
				"          STATUS as string,",
				"          ERR_MSG_TXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSComplexPromo",
				"source(output(",
				"          PROMO_ID as integer,",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          {CHNL_ID } as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTTPROOUHILVOPORI",
				"source(output(",
				"          PROMO_ID as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          MERCH_TYPE as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          ITEM as string,",
				"          DIFF_ID as string,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as integer,",
				"          CNFG_STYP_CDASGRP as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RPMAllDiv",
				"source(output(",
				"          PROMO_ID as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          MERCH_TYPE as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          ITEM as string,",
				"          DIFF_ID as string,",
				"          LOCATION as integer,",
				"          DIVISION as integer,",
				"          GROUP_NO as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RPMTSPCT",
				"source(output(",
				"          PROMO_ID as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          MERCH_TYPE as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          ITEM as string,",
				"          DIFF_ID as string,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as integer,",
				"          DIV as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RPMALLStore",
				"source(output(",
				"          PROMO_ID as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          MERCH_TYPE as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          ITEM as string,",
				"          DIFF_ID as string,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RPMPROMO",
				"DSComplexPromo, IPTTPROOUHILVOPORI lookup(DSComplexPromo@PROMO_ID == IPTTPROOUHILVOPORI@PROMO_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LBrdMktChnl",
				"loBrdMktChnl filter(BRD_ID == $pBrandId && {CHNL_ID } == $pChnlId && MKT_ID == $pMarketId) ~> fiBrdMktChnl",
				"LBrdMktChnl select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = DSComplexPromo@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION,",
				"          APPLY_TO_CODE,",
				"          START_DATE,",
				"          END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loBrdMktChnl",
				"fiBrdMktChnl, RPMTSPCT lookup(loBrdMktChnl@PROMO_ID == RPMTSPCT@PROMO_ID",
				"     && loBrdMktChnl@START_DATE == RPMTSPCT@START_DATE",
				"     && loBrdMktChnl@END_DATE == RPMTSPCT@END_DATE",
				"     && loBrdMktChnl@MERCH_TYPE == RPMTSPCT@MERCH_TYPE",
				"     && loBrdMktChnl@DEPT == RPMTSPCT@DEPT",
				"     && loBrdMktChnl@CLASS == RPMTSPCT@CLASS",
				"     && loBrdMktChnl@SUBCLASS == RPMTSPCT@SUBCLASS",
				"     && loBrdMktChnl@ITEM == RPMTSPCT@ITEM",
				"     && loBrdMktChnl@DIFF_ID == RPMTSPCT@DIFF_ID",
				"     && loBrdMktChnl@LOCATION == RPMTSPCT@LOCATION",
				"     && loBrdMktChnl@DIVISION == RPMTSPCT@DIVISION",
				"     && loBrdMktChnl@GROUP_NO == RPMTSPCT@GROUP_NO,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LTSPCTkeys",
				"split2@Yes select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split2@Yes@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split2@Yes@MERCH_TYPE,",
				"          DIVISION = split2@Yes@DIVISION,",
				"          GROUP_NO = split2@Yes@GROUP_NO,",
				"          DEPT = split2@Yes@DEPT,",
				"          CLASS = split2@Yes@CLASS,",
				"          SUBCLASS = split2@Yes@SUBCLASS,",
				"          DIFF_ID = split2@Yes@DIFF_ID,",
				"          ITEM = split2@Yes@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split2@Yes@LOCATION,",
				"          APPLY_TO_CODE,",
				"          START_DATE = split2@Yes@START_DATE,",
				"          END_DATE = split2@Yes@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loTSPCTCompltArejects",
				"loTSPCTCompltArejects split(MERCH_TYPE == 5,",
				"     MERCH_TYPE == 6,",
				"     disjoint: false) ~> split1@(foAllStr, foDiv, forest)",
				"split1@foAllStr, RPMALLStore lookup(split1@foAllStr@PROMO_ID == RPMALLStore@PROMO_ID",
				"     && split1@foAllStr@START_DATE == RPMALLStore@START_DATE",
				"     && split1@foAllStr@END_DATE == RPMALLStore@END_DATE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LAllStore",
				"split1@foDiv, RPMAllDiv lookup(split1@foDiv@PROMO_ID == RPMAllDiv@PROMO_ID",
				"     && split1@foDiv@START_DATE == RPMAllDiv@START_DATE",
				"     && split1@foDiv@END_DATE == RPMAllDiv@END_DATE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDiv",
				"split1@forest, RPMPROMO lookup(split1@forest@PROMO_ID == RPMPROMO@PROMO_ID",
				"     && split1@forest@START_DATE == RPMPROMO@START_DATE",
				"     && split1@forest@END_DATE == RPMPROMO@END_DATE",
				"     && split1@forest@MERCH_TYPE == RPMPROMO@MERCH_TYPE",
				"     && split1@forest@DEPT == RPMPROMO@DEPT",
				"     && split1@forest@CLASS == RPMPROMO@CLASS",
				"     && split1@forest@SUBCLASS == RPMPROMO@SUBCLASS",
				"     && split1@forest@ITEM == RPMPROMO@ITEM",
				"     && split1@forest@DIFF_ID == RPMPROMO@DIFF_ID",
				"     && split1@forest@LOCATION == RPMPROMO@LOCATION",
				"     && split1@forest@APPLY_TO_CODE == RPMPROMO@APPLY_TO_CODE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LPROMOkeys",
				"split3@Yes2 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split3@Yes2@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split3@Yes2@MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split3@Yes2@DEPT,",
				"          CLASS = split3@Yes2@CLASS,",
				"          SUBCLASS = split3@Yes2@SUBCLASS,",
				"          DIFF_ID = split3@Yes2@DIFF_ID,",
				"          ITEM = split3@Yes2@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split3@Yes2@LOCATION,",
				"          APPLY_TO_CODE = split3@Yes2@APPLY_TO_CODE,",
				"          START_DATE = split3@Yes2@START_DATE,",
				"          END_DATE = split3@Yes2@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AllStore",
				"split4@Yes3 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split4@Yes3@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split4@Yes3@MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split4@Yes3@DEPT,",
				"          CLASS = split4@Yes3@CLASS,",
				"          SUBCLASS = split4@Yes3@SUBCLASS,",
				"          DIFF_ID = split4@Yes3@DIFF_ID,",
				"          ITEM = split4@Yes3@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split4@Yes3@LOCATION,",
				"          APPLY_TO_CODE = split4@Yes3@APPLY_TO_CODE,",
				"          START_DATE = split4@Yes3@START_DATE,",
				"          END_DATE = split4@Yes3@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Div",
				"split5@Yes4 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split5@Yes4@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split5@Yes4@MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split5@Yes4@DEPT,",
				"          CLASS = split5@Yes4@CLASS,",
				"          SUBCLASS = split5@Yes4@SUBCLASS,",
				"          DIFF_ID = split5@Yes4@DIFF_ID,",
				"          ITEM = split5@Yes4@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split5@Yes4@LOCATION,",
				"          APPLY_TO_CODE = split5@Yes4@APPLY_TO_CODE,",
				"          START_DATE = split5@Yes4@START_DATE,",
				"          END_DATE = split5@Yes4@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> PROMOkeys",
				"AllStore, Div, PROMOkeys union(byName: true)~> union1",
				"union2 derive(DESCRIPTION = 'Approved Promo MH-Loc processed successfully in RPM Staging is missing OR not in active state in RPM Base tables OR Apply to code is not matching') ~> xAddDesc",
				"LTSPCTkeys derive(IsMatch = isMatch()) ~> IsMatch",
				"IsMatch split(IsMatch==true(),",
				"     disjoint: false) ~> split2@(Yes, No)",
				"split2@No select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          APPLY_TO_CODE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"LAllStore derive(IsMatch = isMatch()) ~> IsMatch2",
				"LDiv derive(IsMatch = isMatch()) ~> IsMatch3",
				"LPROMOkeys derive(IsMatch = isMatch()) ~> IsMatch4",
				"IsMatch2 split(IsMatch==true(),",
				"     disjoint: false) ~> split3@(Yes2, No2)",
				"IsMatch3 split(IsMatch==true(),",
				"     disjoint: false) ~> split4@(Yes3, N3)",
				"IsMatch4 split(IsMatch==true(),",
				"     disjoint: false) ~> split5@(Yes4, No4)",
				"split3@No2 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split3@No2@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split3@No2@MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split3@No2@DEPT,",
				"          CLASS = split3@No2@CLASS,",
				"          SUBCLASS = split3@No2@SUBCLASS,",
				"          DIFF_ID = split3@No2@DIFF_ID,",
				"          ITEM = split3@No2@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split3@No2@LOCATION,",
				"          APPLY_TO_CODE = split3@No2@APPLY_TO_CODE,",
				"          START_DATE = split3@No2@START_DATE,",
				"          END_DATE = split3@No2@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NStore",
				"split4@N3 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split4@N3@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split4@N3@MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split4@N3@DEPT,",
				"          CLASS = split4@N3@CLASS,",
				"          SUBCLASS = split4@N3@SUBCLASS,",
				"          DIFF_ID = split4@N3@DIFF_ID,",
				"          ITEM = split4@N3@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split4@N3@LOCATION,",
				"          APPLY_TO_CODE = split4@N3@APPLY_TO_CODE,",
				"          START_DATE = split4@N3@START_DATE,",
				"          END_DATE = split4@N3@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NDiv",
				"split5@No4 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          {CHNL_ID },",
				"          PROMO_ID = split5@No4@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = split5@No4@MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split5@No4@DEPT,",
				"          CLASS = split5@No4@CLASS,",
				"          SUBCLASS = split5@No4@SUBCLASS,",
				"          DIFF_ID = split5@No4@DIFF_ID,",
				"          ITEM = split5@No4@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = split5@No4@LOCATION,",
				"          APPLY_TO_CODE = split5@No4@APPLY_TO_CODE,",
				"          START_DATE = split5@No4@START_DATE,",
				"          END_DATE = split5@No4@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Nrest",
				"NStore, NDiv, Nrest union(byName: true)~> union2",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT223_Promo_Errors_RPM_Threshold_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFNotinStaging",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          {CHNL_ID } as string,",
				"          PROMO_ID as string,",
				"          PROMO_NAME as string,",
				"          COMP_DISPLAY_ID as string,",
				"          PROMO_COMP_ID as string,",
				"          PROMO_COMP_DETAIL_ID as string,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID as string,",
				"          THRESHOLD_ID as string,",
				"          THRESHOLD_DISPLAY_ID as string,",
				"          MERCH_TYPE as string,",
				"          DIVISION as string,",
				"          GROUP_NO as string,",
				"          DEPT as string,",
				"          CLASS as string,",
				"          SUBCLASS as string,",
				"          DIFF_ID as string,",
				"          ITEM as string,",
				"          ATTRIBUTE_1 as string,",
				"          ATTRIBUTE_2 as string,",
				"          ATTRIBUTE_3 as string,",
				"          ZONE_NODE_TYPE as string,",
				"          ZONE_ID as string,",
				"          LOCATION as string,",
				"          APPLY_TO_CODE as string,",
				"          START_DATE as string,",
				"          END_DATE as string,",
				"          IGNORE_CONSTRAINTS as string,",
				"          THRESHOLD_NAME as string,",
				"          CURRENCY_CODE as string,",
				"          QUALIFICATION_TYPE as string,",
				"          THRESHOLD_TYPE as string,",
				"          THRESHOLD_AMOUNT as string,",
				"          THRESHOLD_CURRENCY as string,",
				"          THRESHOLD_QUANTITY as string,",
				"          CHANGE_TYPE as string,",
				"          CHANGE_AMOUNT as string,",
				"          CHANGE_CURRENCY as string,",
				"          CHANGE_PERCENT as string,",
				"          CHANGE_UOM as string,",
				"          AUTO_APPROVE_IND as string,",
				"          PROCESS_ID as string,",
				"          STATUS as string,",
				"          ERR_MSG_TXT as string",
				"     ),",
				"     partitionFileNames:[(concat('IPT22_ApprovedPromo_Success_RPM_Item_Loc_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ApprPromoSuccessItem",
				"xAddDesc sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT223_ApprovedPromo_Errors_RPM_Item-Loc_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ApprPromoErrorItem"
			]
		}
	}
}