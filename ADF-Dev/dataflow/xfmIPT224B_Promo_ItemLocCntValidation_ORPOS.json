{
	"name": "xfmIPT224B_Promo_ItemLocCntValidation_ORPOS",
	"properties": {
		"folder": {
			"name": "22-E2EPricingValidations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_IPT22_ApprovedPromo_Success_RPM_Item_Loc_ASIA",
						"type": "DatasetReference"
					},
					"name": "ApprPromoSuccessItem"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT22_UnApprovedPromo_Success_RPMBase_ASIA",
						"type": "DatasetReference"
					},
					"name": "UnApprPromoSuccessItem"
				},
				{
					"dataset": {
						"referenceName": "AB_IM_SKUCnt_Div_224B",
						"type": "DatasetReference"
					},
					"name": "IMSKUCntDiv"
				},
				{
					"dataset": {
						"referenceName": "AB_IM_SKUCount_Grp_224B",
						"type": "DatasetReference"
					},
					"name": "IMSKUCountGrp"
				},
				{
					"dataset": {
						"referenceName": "IM_SKUCount_Class_224B",
						"type": "DatasetReference"
					},
					"name": "SKUCountClass"
				},
				{
					"dataset": {
						"referenceName": "AB_IM_SKUCount_Style_224B",
						"type": "DatasetReference"
					},
					"name": "IMSKUCountStyle"
				},
				{
					"dataset": {
						"referenceName": "AB_IM_SKUCount_CC_224B",
						"type": "DatasetReference"
					},
					"name": "IMSKUCountCC"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_IPT224_ApprPromo_NotInItemMaster_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFNotInIM"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT22_ApprPromo_SKUCount_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSSKUCount"
				}
			],
			"transformations": [
				{
					"name": "XApprAction"
				},
				{
					"name": "XUNApprAction"
				},
				{
					"name": "inAppr"
				},
				{
					"name": "inUnappr"
				},
				{
					"name": "XMerchType"
				},
				{
					"name": "split1"
				},
				{
					"name": "LDiv"
				},
				{
					"name": "LStyle"
				},
				{
					"name": "LCC"
				},
				{
					"name": "LGrp"
				},
				{
					"name": "LClass"
				},
				{
					"name": "OutDiv"
				},
				{
					"name": "OutStyle"
				},
				{
					"name": "OutCC"
				},
				{
					"name": "OutGrp"
				},
				{
					"name": "OutClass"
				},
				{
					"name": "FMHRejects"
				},
				{
					"name": "XDesc"
				},
				{
					"name": "IsMatch"
				},
				{
					"name": "IsMatch2"
				},
				{
					"name": "IsMatch3"
				},
				{
					"name": "IsMatch4"
				},
				{
					"name": "IsMatch5"
				},
				{
					"name": "split2"
				},
				{
					"name": "split3"
				},
				{
					"name": "split4"
				},
				{
					"name": "split5"
				},
				{
					"name": "split6"
				},
				{
					"name": "NCC"
				},
				{
					"name": "NCLASS"
				},
				{
					"name": "Mgrp"
				},
				{
					"name": "NStyle"
				},
				{
					"name": "Ndiv"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          {CHNL_ID } as integer,",
				"          PROMO_ID as integer,",
				"          PROMO_NAME as string,",
				"          COMP_DISPLAY_ID as string,",
				"          PROMO_COMP_ID as string,",
				"          PROMO_COMP_DETAIL_ID as string,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID as string,",
				"          THRESHOLD_ID as string,",
				"          THRESHOLD_DISPLAY_ID as string,",
				"          MERCH_TYPE as integer,",
				"          DIVISION as integer,",
				"          GROUP_NO as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          DIFF_ID as string,",
				"          ITEM as string,",
				"          ATTRIBUTE_1 as string,",
				"          ATTRIBUTE_2 as string,",
				"          ATTRIBUTE_3 as string,",
				"          ZONE_NODE_TYPE as string,",
				"          ZONE_ID as string,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as string,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          IGNORE_CONSTRAINTS as string,",
				"          THRESHOLD_NAME as string,",
				"          CURRENCY_CODE as string,",
				"          QUALIFICATION_TYPE as string,",
				"          THRESHOLD_TYPE as integer,",
				"          THRESHOLD_AMOUNT as string,",
				"          THRESHOLD_CURRENCY as string,",
				"          THRESHOLD_QUANTITY as string,",
				"          CHANGE_TYPE as string,",
				"          CHANGE_AMOUNT as decimal(15,2),",
				"          CHANGE_CURRENCY as string,",
				"          CHANGE_PERCENT as decimal(15,2),",
				"          CHANGE_UOM as string,",
				"          AUTO_APPROVE_IND as string,",
				"          PROCESS_ID as string,",
				"          STATUS as string,",
				"          ERR_MSG_TXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ApprPromoSuccessItem",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          PMOTN_ID as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as string,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          MIN_QTY as string,",
				"          MERCH_TYPE as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          ITEM as string,",
				"          DIFF_ID as string,",
				"          LOCATION as integer,",
				"          DIVISION as integer,",
				"          GROUP_NO as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> UnApprPromoSuccessItem",
				"source(output(",
				"          DIV as integer,",
				"          {SKU_Count } as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IMSKUCntDiv",
				"source(output(",
				"          GROUP_NO as integer,",
				"          {SKU_Count } as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IMSKUCountGrp",
				"source(output(",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SKU_Count as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SKUCountClass",
				"source(output(",
				"          Style as string,",
				"          {SKU_Count } as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IMSKUCountStyle",
				"source(output(",
				"          Style as string,",
				"          diff_1 as string,",
				"          SKU_Count as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IMSKUCountCC",
				"inAppr derive(PROMO_ACTION = 'Approved Promo') ~> XApprAction",
				"inUnappr derive(PROMO_ACTION = 'UnApproved Promo') ~> XUNApprAction",
				"ApprPromoSuccessItem select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID = {CHNL_ID },",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> inAppr",
				"UnApprPromoSuccessItem select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID = PMOTN_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> inUnappr",
				"XApprAction, XUNApprAction union(byName: true)~> XMerchType",
				"XMerchType split(MERCH_TYPE == 4 && isNull(DIFF_ID),",
				"     MERCH_TYPE == 2,",
				"     MERCH_TYPE == 6,",
				"     MERCH_TYPE == 0 || (MERCH_TYPE == 4 && isNull(DIFF_ID)),",
				"     MERCH_TYPE == 5,",
				"     disjoint: false) ~> split1@(CC, Class, Group, Style, Div)",
				"split1@Div, IMSKUCntDiv lookup(DIVISION == DIV,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDiv",
				"split1@Style, IMSKUCountStyle lookup(ITEM == Style,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyle",
				"split1@CC, IMSKUCountCC lookup(ITEM == Style",
				"     && DIFF_ID == diff_1,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LCC",
				"split1@Group, IMSKUCountGrp lookup(split1@Group@GROUP_NO == IMSKUCountGrp@GROUP_NO,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LGrp",
				"split1@Class, SKUCountClass lookup(split1@Class@DEPT == SKUCountClass@DEPT",
				"     && split1@Class@CLASS == SKUCountClass@CLASS,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LClass",
				"split5@Yes5 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION,",
				"          SKU_Count = {SKU_Count }",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutDiv",
				"split6@Yes4 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION,",
				"          SKU_Count = {SKU_Count }",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutStyle",
				"split2@Yes select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION,",
				"          SKU_Count",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutCC",
				"split4@Yes3 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO = split4@Yes3@GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION,",
				"          SKU_Count = {SKU_Count }",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutGrp",
				"split3@Yes2 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split3@Yes2@DEPT,",
				"          CLASS = split3@Yes2@CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION,",
				"          SKU_Count",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutClass",
				"OutDiv, OutStyle, OutCC, OutGrp, OutClass union(byName: true)~> FMHRejects",
				"Ndiv derive(DESCRIPTION = 'MH of Approved/Unapproved Promo in RPM Staging is not found in RPM IM table') ~> XDesc",
				"LCC derive(IsMatch = isMatch()) ~> IsMatch",
				"LClass derive(IsMatch = isMatch()) ~> IsMatch2",
				"LGrp derive(IsMatch = isMatch()) ~> IsMatch3",
				"LStyle derive(IsMatch = isMatch()) ~> IsMatch4",
				"LDiv derive(IsMatch = isMatch()) ~> IsMatch5",
				"IsMatch split(IsMatch==true(),",
				"     disjoint: false) ~> split2@(Yes, No)",
				"IsMatch2 split(IsMatch==true(),",
				"     disjoint: false) ~> split3@(Yes2, No2)",
				"IsMatch3 split(IsMatch==true(),",
				"     disjoint: false) ~> split4@(Yes3, No3)",
				"IsMatch5 split(IsMatch==true(),",
				"     disjoint: false) ~> split5@(Yes5, No5)",
				"IsMatch4 split(IsMatch==true(),",
				"     disjoint: false) ~> split6@(Yes4, No4)",
				"split2@No select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NCC",
				"split3@No2 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT = split3@No2@DEPT,",
				"          CLASS = split3@No2@CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NCLASS",
				"split4@No3 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO = split4@No3@GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Mgrp",
				"split6@No4 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NStyle",
				"split5@No5 select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          LOCATION,",
				"          START_DATE,",
				"          END_DATE,",
				"          PROMO_ACTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Ndiv",
				"XDesc sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT224_ApprPromo_NotInItemMaster_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFNotInIM",
				"FMHRejects sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          CHNL_ID as string,",
				"          PROMO_ID as string,",
				"          MERCH_TYPE as string,",
				"          DIVISION as string,",
				"          GROUP_NO as string,",
				"          DEPT as string,",
				"          CLASS as string,",
				"          SUBCLASS as string,",
				"          DIFF_ID as string,",
				"          ITEM as string,",
				"          LOCATION as string,",
				"          START_DATE as string,",
				"          END_DATE as string,",
				"          PROMO_ACTION as string,",
				"          SKU_Count as string",
				"     ),",
				"     partitionFileNames:[(concat('IPT22_ApprPromo_SKUCount_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> DSSKUCount"
			]
		}
	}
}