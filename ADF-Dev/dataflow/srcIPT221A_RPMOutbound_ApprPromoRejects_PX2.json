{
	"name": "srcIPT221A_RPMOutbound_ApprPromoRejects_PX2",
	"properties": {
		"folder": {
			"name": "22-E2EPricingValidations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_IPT221_RPMOutbound_Approved1_PromoRejects1_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFReject1"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_Brd",
						"type": "DatasetReference"
					},
					"name": "DSBRD"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_Diffs",
						"type": "DatasetReference"
					},
					"name": "DSItem"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_Users",
						"type": "DatasetReference"
					},
					"name": "DSUser"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_PromoUser",
						"type": "DatasetReference"
					},
					"name": "DSPromoUser"
				},
				{
					"dataset": {
						"referenceName": "AB_ExtIPT221_IPT_RPM_Table_Load_DS_TMRCY",
						"type": "DatasetReference"
					},
					"name": "DSTMRCY"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_IPT221_RPMOutbound_Approved_PromoRejects1_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFBrdMktChReject"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "LDiv1"
				},
				{
					"name": "loDiv1"
				},
				{
					"name": "coDiv1"
				},
				{
					"name": "XDiv1"
				},
				{
					"name": "LDept"
				},
				{
					"name": "coDept1"
				},
				{
					"name": "coClass1"
				},
				{
					"name": "loDept"
				},
				{
					"name": "XDept1"
				},
				{
					"name": "LClass1"
				},
				{
					"name": "loClass1"
				},
				{
					"name": "XClass1"
				},
				{
					"name": "LSubclass1"
				},
				{
					"name": "loSubclass1"
				},
				{
					"name": "coStyleDeptlevel1"
				},
				{
					"name": "LStyleDept11"
				},
				{
					"name": "LStyleDept12"
				},
				{
					"name": "loStyleDept1"
				},
				{
					"name": "LStyleColor11"
				},
				{
					"name": "LStyleColor12"
				},
				{
					"name": "loStyleColor1"
				},
				{
					"name": "FStyleCombine1"
				},
				{
					"name": "LBrdID"
				},
				{
					"name": "rejPromoUserXoBrdid"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "xoPromoUser"
				},
				{
					"name": "FPromoUserCombine"
				},
				{
					"name": "LTMRCY"
				},
				{
					"name": "xoBMC"
				},
				{
					"name": "rmitem"
				},
				{
					"name": "xoitemrej"
				},
				{
					"name": "StyleColor"
				},
				{
					"name": "StyleDept"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          PMOTN_REQ_ID_S as integer,",
				"          PMOTN_STRT_DT as timestamp,",
				"          PMOTN_END_DT as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as timestamp,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          MDSE_HIER_LVL_SEQ_NBR_S as integer,",
				"          PRC_GRP_ZN_SEQ_NBR_S as integer,",
				"          MIN_QTY as integer,",
				"          PMOTN_PRC_UN_AMT as decimal(15,2),",
				"          PMOTN_PCT_OFF_RAT as decimal(15,2),",
				"          PMOTN_DLR_OFF_AMT as decimal(15,2),",
				"          PMOTN_DSCT_CD as string,",
				"          PMOTN_DESC as string,",
				"          CNCY_CD as string,",
				"          DESCRIPTION as string,",
				"          DEPT_ID as integer,",
				"          CLS_ID as integer,",
				"          SCLS_ID as integer,",
				"          DIV_ID as integer,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FFReject1",
				"source(output(",
				"          BRD_ID as integer,",
				"          BRD_DESC as string,",
				"          DIV_ID as integer,",
				"          DIV_DESC as string,",
				"          DEPT_ID as integer,",
				"          DEPT_DESC as string,",
				"          CLS_ID as integer,",
				"          CLS_DESC as string,",
				"          SCLS_ID as integer,",
				"          SCLS_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSBRD",
				"source(output(",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_NBR as string,",
				"          DIFF_1_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSItem",
				"source(output(",
				"          PMOTN_REQ_ID_S as integer,",
				"          CRT_UPDT_USER_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSUser",
				"source(output(",
				"          PMOTN_REQ_ID as integer,",
				"          PMOTN_GRP_ID_S as integer,",
				"          CRT_UPDT_USER_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSPromoUser",
				"source(output(",
				"          MDSE_LVL_CD as string,",
				"          MDSE_LVL_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSTMRCY",
				"FFReject1 split(MDSE_LVL_CD == '3',",
				"     MDSE_LVL_CD == '4',",
				"     MDSE_LVL_CD == '5',",
				"     MDSE_LVL_CD == '6',",
				"     MDSE_LVL_CD == '8',",
				"     MDSE_LVL_CD == '9',",
				"     disjoint: false) ~> split1@(fioDiv1, fioDept1, fioClass1, fioSubclass1, fiostyledept1, fiostyleColor1)",
				"split1@fioDiv1, coDiv1 lookup(split1@fioDiv1@DIV_ID == coDiv1@DIV_ID",
				"     && split1@fioDiv1@BRD_ID == coDiv1@BRD_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDiv1",
				"LDiv1 select(mapColumn(",
				"          BRD_ID = split1@fioDiv1@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          DIV_ID = split1@fioDiv1@DIV_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          BRD_DESC,",
				"          DIV_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loDiv1",
				"DSBRD select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID,",
				"          DIV_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coDiv1",
				"loDiv1 derive(DEPT_DESC = toString(null()),",
				"          CLS_DESC = toString(null()),",
				"          SCLS_DESC = toString(null())) ~> XDiv1",
				"split1@fiostyledept1, coDept1 lookup(split1@fiostyledept1@BRD_ID == coDept1@BRD_ID",
				"     && split1@fiostyledept1@DIV_ID == coDept1@DIV_ID",
				"     && split1@fiostyledept1@DEPT_ID == coDept1@DEPT_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDept",
				"DSBRD select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coDept1",
				"DSBRD select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coClass1",
				"LDept select(mapColumn(",
				"          BRD_ID = split1@fiostyledept1@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          DEPT_ID = split1@fiostyledept1@DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          DIV_ID = split1@fiostyledept1@DIV_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loDept",
				"loDept derive(CLS_DESC = toString(null()),",
				"          SCLS_DESC = toString(null())) ~> XDept1",
				"split1@fioClass1, coClass1 lookup(split1@fioClass1@BRD_ID == coClass1@BRD_ID",
				"     && split1@fioClass1@DIV_ID == coClass1@DIV_ID",
				"     && split1@fioClass1@DEPT_ID == coClass1@DEPT_ID",
				"     && split1@fioClass1@CLS_ID == coClass1@CLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LClass1",
				"LClass1 select(mapColumn(",
				"          BRD_ID = split1@fioClass1@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          DEPT_ID = split1@fioClass1@DEPT_ID,",
				"          CLS_ID = split1@fioClass1@CLS_ID,",
				"          SCLS_ID,",
				"          DIV_ID = split1@fioClass1@DIV_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loClass1",
				"loClass1 derive(SCLS_DESC = toString(null())) ~> XClass1",
				"split1@fioSubclass1, DSBRD lookup(split1@fioSubclass1@BRD_ID == DSBRD@BRD_ID",
				"     && split1@fioSubclass1@DIV_ID == DSBRD@DIV_ID",
				"     && split1@fioSubclass1@CLS_ID == DSBRD@CLS_ID",
				"     && split1@fioSubclass1@SCLS_ID == DSBRD@SCLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LSubclass1",
				"LSubclass1 select(mapColumn(",
				"          BRD_ID = split1@fioSubclass1@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          DEPT_ID = split1@fioSubclass1@DEPT_ID,",
				"          CLS_ID = split1@fioSubclass1@CLS_ID,",
				"          SCLS_ID = split1@fioSubclass1@SCLS_ID,",
				"          DIV_ID = split1@fioSubclass1@DIV_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC,",
				"          SCLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loSubclass1",
				"DSItem select(mapColumn(",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_NBR",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coStyleDeptlevel1",
				"split1@fioDept1, coStyleDeptlevel1 lookup(ITM_STY_CLR_SEQ_NBR_S == coStyleDeptlevel1@ITM_STY_SEQ_NBR_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleDept11",
				"LStyleDept11, DSBRD lookup(split1@fioDept1@BRD_ID == DSBRD@BRD_ID",
				"     && split1@fioDept1@DIV_ID == DSBRD@DIV_ID",
				"     && split1@fioDept1@DEPT_ID == DSBRD@DEPT_ID",
				"     && split1@fioDept1@CLS_ID == DSBRD@CLS_ID",
				"     && split1@fioDept1@SCLS_ID == DSBRD@SCLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleDept12",
				"LStyleDept12 select(mapColumn(",
				"          BRD_ID = split1@fioDept1@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          DEPT_ID = split1@fioDept1@DEPT_ID,",
				"          CLS_ID = split1@fioDept1@CLS_ID,",
				"          SCLS_ID = split1@fioDept1@SCLS_ID,",
				"          DIV_ID = split1@fioDept1@DIV_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S = ITM_STY_NBR,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC,",
				"          SCLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loStyleDept1",
				"split1@fiostyleColor1, DSBRD lookup(split1@fiostyleColor1@BRD_ID == DSBRD@BRD_ID",
				"     && split1@fiostyleColor1@DIV_ID == DSBRD@DIV_ID",
				"     && split1@fiostyleColor1@DEPT_ID == DSBRD@DEPT_ID",
				"     && split1@fiostyleColor1@CLS_ID == DSBRD@CLS_ID",
				"     && split1@fiostyleColor1@SCLS_ID == DSBRD@SCLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleColor11",
				"LStyleColor11, DSItem lookup(split1@fiostyleColor1@ITM_STY_CLR_SEQ_NBR_S == DSItem@ITM_STY_CLR_SEQ_NBR_S",
				"     && split1@fiostyleColor1@ITM_STY_SEQ_NBR_S == DSItem@ITM_STY_SEQ_NBR_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleColor12",
				"LStyleColor12 select(mapColumn(",
				"          BRD_ID = split1@fiostyleColor1@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          DEPT_ID = split1@fiostyleColor1@DEPT_ID,",
				"          CLS_ID = split1@fiostyleColor1@CLS_ID,",
				"          SCLS_ID = split1@fiostyleColor1@SCLS_ID,",
				"          DIV_ID = split1@fiostyleColor1@DIV_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S = DIFF_1_ID,",
				"          ITM_STY_SEQ_NBR_S = ITM_STY_NBR,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC,",
				"          SCLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loStyleColor1",
				"XDiv1, StyleDept, XClass1, loSubclass1, XDept1, StyleColor union(byName: true)~> FStyleCombine1",
				"FStyleCombine1, DSUser lookup(FStyleCombine1@PMOTN_REQ_ID_S == DSUser@PMOTN_REQ_ID_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LBrdID",
				"LBrdID select(mapColumn(",
				"          PMOTN_REQ_ID_S = FStyleCombine1@PMOTN_REQ_ID_S,",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          CRT_UPDT_USER_ID,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR = ITM_STY_SEQ_NBR_S,",
				"          DIFF_1_ID = ITM_STY_CLR_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> rejPromoUserXoBrdid",
				"rejPromoUserXoBrdid, DSPromoUser lookup(PMOTN_REQ_ID_S == PMOTN_GRP_ID_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          CRT_UPDT_USER_ID = rejPromoUserXoBrdid@CRT_UPDT_USER_ID,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR,",
				"          DIFF_1_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoPromoUser",
				"xoPromoUser, rejPromoUserXoBrdid union(byName: true)~> FPromoUserCombine",
				"FPromoUserCombine, DSTMRCY lookup(FPromoUserCombine@MDSE_LVL_CD == DSTMRCY@MDSE_LVL_CD,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LTMRCY",
				"LTMRCY select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_CD = FPromoUserCombine@MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          CNCY_CD,",
				"          DESCRIPTION,",
				"          CRT_UPDT_USER_ID,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          MDSE_LVL_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoBMC",
				"xoBMC aggregate(groupBy(ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S),",
				"     each(match(!in(['ITM_STY_NBR','DIFF_1_ID','PMOTN_REQ_ID_S','PRC_GRP_ZN_SEQ_NBR_S'],name)), $$ = first($$))) ~> rmitem",
				"rmitem select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          PMOTN_REQ_ID_S,",
				"          MDSE_LVL_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          MIN_QTY,",
				"          PMOTN_DESC,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          CNCY_CD,",
				"          CRT_UPDT_USER_ID,",
				"          DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoitemrej",
				"loStyleColor1 cast(output(",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer",
				"     ),",
				"     errors: true) ~> StyleColor",
				"loStyleDept1 cast(output(",
				"          ITM_STY_SEQ_NBR_S as integer",
				"     ),",
				"     errors: true) ~> StyleDept",
				"xoitemrej sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT221-RPMOutbound_Approved_PromoRejects1_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFBrdMktChReject"
			]
		}
	}
}