{
	"name": "ldIPT011BCRItemsUMHDS_PX",
	"properties": {
		"folder": {
			"name": "01-BCRItems"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT011BCRItemsUMHDSSeqNbr_PX_DS_UMHDSLoad",
						"type": "DatasetReference"
					},
					"name": "DSUMHDS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_ldIPT011BCRItemsUMHDS_PX_DS_HIERARCHY_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSHIERARCHY"
				},
				{
					"dataset": {
						"referenceName": "AB_ldIPT011BCRItemsUMHDS_PX_DS_UMHDS_UNIV_MDSE_HIER_T_Temp_ASIA",
						"type": "DatasetReference"
					},
					"name": "IPTUMHDSTemp"
				}
			],
			"transformations": [
				{
					"name": "DSUMHDSSelect"
				},
				{
					"name": "XUMHDS2"
				},
				{
					"name": "XUMHDS1"
				},
				{
					"name": "outHIERARCHY"
				},
				{
					"name": "outHIERARCHYSelect"
				},
				{
					"name": "outUMHDSSelect"
				},
				{
					"name": "outUMHDS"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA'),",
				"     jsUserId as string ('PIPT014U')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CO_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as integer,",
				"          DIV_DESC as string,",
				"          DEPT_ID as integer,",
				"          DEPT_DESC as string,",
				"          CLS_ID as integer,",
				"          CLS_DESC as string,",
				"          SCLS_ID as integer,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as integer,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as integer,",
				"          SEASON_DESC as string,",
				"          MKT_DIFF1_ID as string,",
				"          MKT_DIF2_ID as string,",
				"          ITM_SKU_NBR as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S as integer,",
				"          BrdId1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSUMHDS",
				"DSUMHDS select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CO_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_CC_NBR,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIFF1_ID,",
				"          MKT_DIF2_ID,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DSUMHDSSelect",
				"DSUMHDSSelect derive(BRD_ABBR_DESC = iif(isNull(BRD_DESC), BRD_DESC, substring(BRD_DESC,0,20)),",
				"          DIV_ABBR_DESC = iif(isNull(DIV_DESC), DIV_DESC, substring(DIV_DESC,0,20)),",
				"          DEPT_ABBR_DESC = iif(isNull(DEPT_DESC), DEPT_DESC, substring(DEPT_DESC,0,20)),",
				"          CLS_ID = right('00'+ toString(CLS_ID) ,2),",
				"          CLS_ABBR_DESC = iif(isNull(CLS_DESC), CLS_DESC, substring(CLS_DESC,0,20))) ~> XUMHDS2",
				"DSUMHDSSelect derive(BRD_ABBR_DESC = iif(isNull(BRD_DESC), BRD_DESC, substring(BRD_DESC,0,20)),",
				"          DIV_ABBR_DESC = iif(isNull(DIV_DESC), DIV_DESC, substring(DIV_DESC,0,20)),",
				"          DEPT_ABBR_DESC = iif(isNull(DEPT_DESC), DEPT_DESC, substring(DEPT_DESC,0,20)),",
				"          CLS_ID = right('00'+toString(CLS_ID) ,2),",
				"          CLS_ABBR_DESC = iif(isNull(CLS_DESC), CLS_DESC, substring(CLS_DESC,0,20)),",
				"          SCLS_ID = right('00'+toString(SCLS_ID) ,2),",
				"          SCLS_ABBR_DESC = iif(isNull(SCLS_DESC), SCLS_DESC, substring(SCLS_DESC,0,20)),",
				"          CRT_UPDT_USER_ID = $jsUserId,",
				"          CRT_UPDT_DTTM = currentDate(),",
				"          LST_UPDT_USER_ID = $jsUserId,",
				"          LST_UPDT_DTTM = currentDate()) ~> XUMHDS1",
				"outHIERARCHYSelect cast(output(",
				"          CLS_ID as integer",
				"     ),",
				"     errors: true) ~> outHIERARCHY",
				"XUMHDS2 select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          BRD_ABBR_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DIV_ABBR_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          DEPT_ABBR_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          CLS_ABBR_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> outHIERARCHYSelect",
				"XUMHDS1 select(mapColumn(",
				"          UNIV_MDSE_HIER_SEQ_NBR_S,",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          BRD_ABBR_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DIV_ABBR_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          DEPT_ABBR_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          CLS_ABBR_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          SCLS_ABBR_DESC,",
				"          CRT_UPDT_USER_ID,",
				"          CRT_UPDT_DTTM,",
				"          LST_UPDT_USER_ID,",
				"          LST_UPDT_DTTM",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> outUMHDSSelect",
				"outUMHDSSelect cast(output(",
				"          CLS_ID as integer",
				"     ),",
				"     errors: true) ~> outUMHDS",
				"outHIERARCHY sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('ldIPT011BCRItemsUMHDS_PX.DS_HIERARCHY.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> DSHIERARCHY",
				"outUMHDS sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('ldIPT011BCRItemsUMHDS_PX.DS_UMHDS_UNIV_MDSE_HIER_T_Temp.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> IPTUMHDSTemp"
			]
		}
	}
}