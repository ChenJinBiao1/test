{
	"name": "ldIPT12DTPROOUnApprUpdate_PX_FF_Rej",
	"properties": {
		"folder": {
			"name": "12-PriceUpdatesRPM"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_TPROO_PMOTN_REQ_HDR_OTPT_T_12D_Temp",
						"type": "DatasetReference"
					},
					"name": "TPROOTemp"
				},
				{
					"dataset": {
						"referenceName": "AB_ldIPT12DTPROOUnApprUpdate_PX_FF_TPROOUNRej",
						"type": "DatasetReference"
					},
					"name": "FFTPROOUnRej"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_ldIPT12DTPROOUnApprUpdate_PX_FF_TPROOUNRej",
						"type": "DatasetReference"
					},
					"name": "FFTPROOUnRej1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     PMOTN_REQ_ID_S as integer (0),",
				"     PMOTN_STRT_DT as string,",
				"     PMOTN_END_DT as string (toString(null())),",
				"     PROC_STAT_CD as string (toString(null())),",
				"     PRC_SYS_EXT_DTTM as string (toString(null())),",
				"     EXTL_PMOTN_IND as string (toString(null())),",
				"     MDSE_LVL_CD as string (toString(null())),",
				"     CHNL_ID as integer (0),",
				"     MKT_ID as string (toString(null())),",
				"     PMOTN_APPL_TYP_CD as string (toString(null()))",
				"}",
				"source(output(",
				"          PMOTN_REQ_ID_S as integer,",
				"          PMOTN_STRT_DT as timestamp,",
				"          PMOTN_END_DT as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as timestamp,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as integer,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TPROOTemp",
				"source(output(",
				"          PMOTN_REQ_ID_S as integer,",
				"          PMOTN_STRT_DT as timestamp,",
				"          PMOTN_END_DT as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as timestamp,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as integer,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          sqlcode as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FFTPROOUnRej",
				"TPROOTemp filter(PMOTN_REQ_ID_S == $PMOTN_REQ_ID_S || isNull(PMOTN_REQ_ID_S)  && \r",
				"PMOTN_STRT_DT ==toTimestamp($PMOTN_STRT_DT)  || isNull(PMOTN_STRT_DT) &&\r",
				"PMOTN_END_DT ==toTimestamp($PMOTN_END_DT)  || isNull(PMOTN_END_DT) &&\r",
				"PROC_STAT_CD ==$PROC_STAT_CD  || isNull(PROC_STAT_CD) &&\r",
				"PRC_SYS_EXT_DTTM ==toTimestamp($PRC_SYS_EXT_DTTM)  || isNull(PRC_SYS_EXT_DTTM) &&\r",
				"EXTL_PMOTN_IND == $EXTL_PMOTN_IND || isNull(EXTL_PMOTN_IND)  && \r",
				"MDSE_LVL_CD == $MDSE_LVL_CD || isNull(MDSE_LVL_CD)  && \r",
				"CHNL_ID == $CHNL_ID || isNull(CHNL_ID)  && \r",
				"MKT_ID == $MKT_ID || isNull(MKT_ID)  && \r",
				"PMOTN_APPL_TYP_CD == $PMOTN_APPL_TYP_CD || isNull(PMOTN_APPL_TYP_CD)) ~> filter1",
				"filter1 derive(DATE_TIME = currentDate()) ~> derivedColumn1",
				"derivedColumn1, FFTPROOUnRej union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PMOTN_REQ_ID_S as string,",
				"          PMOTN_STRT_DT as string,",
				"          PMOTN_END_DT as string,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as string,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as string,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          sqlcode as string",
				"     ),",
				"     partitionFileNames:['ldIPT12DTPROOUnApprUpdate_PX.FF_TPROOUNRej.txt'],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFTPROOUnRej1"
			]
		}
	}
}