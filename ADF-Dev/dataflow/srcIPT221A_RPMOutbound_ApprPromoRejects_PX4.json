{
	"name": "srcIPT221A_RPMOutbound_ApprPromoRejects_PX4",
	"properties": {
		"folder": {
			"name": "22-E2EPricingValidations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_IPT221_RPMOutbound_Approved3_PromoRejects3_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFReject3"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_Brd",
						"type": "DatasetReference"
					},
					"name": "DSBRD"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_Diffs",
						"type": "DatasetReference"
					},
					"name": "DSItem"
				},
				{
					"dataset": {
						"referenceName": "AB_ExtIPT221_IPT_RPM_Table_Load_DS_TMRCY",
						"type": "DatasetReference"
					},
					"name": "DSTMRCY"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_PromoUser",
						"type": "DatasetReference"
					},
					"name": "DSPromoUser"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT124RPMCmplxSeqNbrGen_PX_DS_Currency",
						"type": "DatasetReference"
					},
					"name": "DSCurrency"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_IPT221_RPMOutbound_Approved_PromoRejects3_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFBrdMktChnDiffRej"
				}
			],
			"transformations": [
				{
					"name": "split3"
				},
				{
					"name": "LDiv3"
				},
				{
					"name": "loDiv3"
				},
				{
					"name": "coDiv3"
				},
				{
					"name": "XDiv3"
				},
				{
					"name": "LDept3"
				},
				{
					"name": "coDept3"
				},
				{
					"name": "coClass3"
				},
				{
					"name": "loDept"
				},
				{
					"name": "XDept3"
				},
				{
					"name": "LClass3"
				},
				{
					"name": "loClass3"
				},
				{
					"name": "XClass3"
				},
				{
					"name": "LSubclass3"
				},
				{
					"name": "loSubclass3"
				},
				{
					"name": "coStyleDeptlevel3"
				},
				{
					"name": "LStyleDept31"
				},
				{
					"name": "LStyleDept32"
				},
				{
					"name": "loStyleDept3"
				},
				{
					"name": "LStyleColor31"
				},
				{
					"name": "LStyleColor32"
				},
				{
					"name": "loStyleColor3"
				},
				{
					"name": "FStyleCombine3"
				},
				{
					"name": "LDEPT"
				},
				{
					"name": "StyleColor"
				},
				{
					"name": "StyleDept"
				},
				{
					"name": "xoDEPT"
				},
				{
					"name": "LTMRCY"
				},
				{
					"name": "xoTMRCY"
				},
				{
					"name": "rmItems1"
				},
				{
					"name": "xoDiffRej"
				},
				{
					"name": "LCC3"
				},
				{
					"name": "xoitemBrdRej"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          PMOTN_REQ_ID_S as integer,",
				"          PMOTN_STRT_DT as timestamp,",
				"          PMOTN_END_DT as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as timestamp,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as integer,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          MDSE_HIER_LVL_SEQ_NBR_S as integer,",
				"          PRC_GRP_ZN_SEQ_NBR_S as integer,",
				"          MIN_QTY as integer,",
				"          PMOTN_PRC_UN_AMT as decimal(15,2),",
				"          PMOTN_PCT_OFF_RAT as decimal(15,2),",
				"          PMOTN_DLR_OFF_AMT as decimal(15,2),",
				"          PMOTN_DSCT_CD as string,",
				"          PMOTN_DESC as string,",
				"          STR_NBR as integer,",
				"          BRD_ID as integer,",
				"          DIV_ID as integer,",
				"          DEPT_ID as integer,",
				"          CLS_ID as integer,",
				"          SCLS_ID as integer,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FFReject3",
				"source(output(",
				"          BRD_ID as integer,",
				"          BRD_DESC as string,",
				"          DIV_ID as integer,",
				"          DIV_DESC as string,",
				"          DEPT_ID as integer,",
				"          DEPT_DESC as string,",
				"          CLS_ID as integer,",
				"          CLS_DESC as string,",
				"          SCLS_ID as integer,",
				"          SCLS_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSBRD",
				"source(output(",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_NBR as string,",
				"          DIFF_1_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSItem",
				"source(output(",
				"          MDSE_LVL_CD as string,",
				"          MDSE_LVL_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSTMRCY",
				"source(output(",
				"          PMOTN_REQ_ID as integer,",
				"          PMOTN_GRP_ID_S as integer,",
				"          CRT_UPDT_USER_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSPromoUser",
				"source(output(",
				"          PRC_GRP_ZN_SEQ_NBR_S as integer,",
				"          CNCY_CD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSCurrency",
				"FFReject3 split(MDSE_LVL_CD == '3',",
				"     MDSE_LVL_CD == '4',",
				"     MDSE_LVL_CD == '5',",
				"     MDSE_LVL_CD == '6',",
				"     MDSE_LVL_CD == '8',",
				"     MDSE_LVL_CD == '9',",
				"     disjoint: false) ~> split3@(fioDiv3, fioDept3, fioClass3, fioSubclass3, fiostyledept3, fiostyleColor3)",
				"split3@fioDiv3, coDiv3 lookup(split3@fioDiv3@BRD_ID == coDiv3@BRD_ID",
				"     && split3@fioDiv3@DIV_ID == coDiv3@DIV_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDiv3",
				"LDiv3 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          CHNL_ID,",
				"          MKT_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          STR_NBR,",
				"          BRD_ID = split3@fioDiv3@BRD_ID,",
				"          DIV_ID = split3@fioDiv3@DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          DESCRIPTION,",
				"          BRD_DESC,",
				"          DIV_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loDiv3",
				"DSBRD select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID,",
				"          DIV_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coDiv3",
				"loDiv3 derive(DEPT_DESC = toString(null()),",
				"          CLS_DESC = toString(null()),",
				"          SCLS_DESC = toString(null())) ~> XDiv3",
				"split3@fiostyledept3, coDept3 lookup(split3@fiostyledept3@BRD_ID == coDept3@BRD_ID",
				"     && split3@fiostyledept3@DIV_ID == coDept3@DIV_ID",
				"     && split3@fiostyledept3@DEPT_ID == coDept3@DEPT_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDept3",
				"DSBRD select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coDept3",
				"DSBRD select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coClass3",
				"LDept3 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          CHNL_ID,",
				"          MKT_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          STR_NBR,",
				"          BRD_ID = split3@fiostyledept3@BRD_ID,",
				"          DIV_ID = split3@fiostyledept3@DIV_ID,",
				"          DEPT_ID = split3@fiostyledept3@DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          DESCRIPTION,",
				"          BRD_ID = coDept3@BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID = coDept3@DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID = coDept3@DEPT_ID,",
				"          DEPT_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loDept",
				"loDept derive(CLS_DESC = toString(null()),",
				"          SCLS_DESC = toString(null())) ~> XDept3",
				"split3@fioClass3, coClass3 lookup(split3@fioClass3@BRD_ID == coClass3@BRD_ID",
				"     && split3@fioClass3@DIV_ID == coClass3@DIV_ID",
				"     && split3@fioClass3@DEPT_ID == coClass3@DEPT_ID",
				"     && split3@fioClass3@CLS_ID == coClass3@CLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LClass3",
				"LClass3 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          CHNL_ID,",
				"          MKT_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          STR_NBR,",
				"          BRD_ID = split3@fioClass3@BRD_ID,",
				"          DIV_ID = split3@fioClass3@DIV_ID,",
				"          DEPT_ID = split3@fioClass3@DEPT_ID,",
				"          CLS_ID = split3@fioClass3@CLS_ID,",
				"          SCLS_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          DESCRIPTION,",
				"          BRD_ID = coClass3@BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID = coClass3@DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID = coClass3@DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID = coClass3@CLS_ID,",
				"          CLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loClass3",
				"loClass3 derive(SCLS_DESC = toString(null())) ~> XClass3",
				"split3@fioSubclass3, DSBRD lookup(split3@fioSubclass3@BRD_ID == DSBRD@BRD_ID",
				"     && split3@fioSubclass3@DIV_ID == DSBRD@DIV_ID",
				"     && split3@fioSubclass3@CLS_ID == DSBRD@CLS_ID",
				"     && split3@fioSubclass3@SCLS_ID == DSBRD@SCLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LSubclass3",
				"LSubclass3 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          CHNL_ID,",
				"          MKT_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          STR_NBR,",
				"          BRD_ID = split3@fioSubclass3@BRD_ID,",
				"          DIV_ID = split3@fioSubclass3@DIV_ID,",
				"          DEPT_ID = split3@fioSubclass3@DEPT_ID,",
				"          CLS_ID = split3@fioSubclass3@CLS_ID,",
				"          SCLS_ID = split3@fioSubclass3@SCLS_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          DESCRIPTION,",
				"          BRD_ID = DSBRD@BRD_ID,",
				"          BRD_DESC,",
				"          DIV_ID = DSBRD@DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID = DSBRD@DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID = DSBRD@CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID = DSBRD@SCLS_ID,",
				"          SCLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loSubclass3",
				"DSItem select(mapColumn(",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_NBR",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> coStyleDeptlevel3",
				"split3@fioDept3, coStyleDeptlevel3 lookup(ITM_STY_CLR_SEQ_NBR_S == coStyleDeptlevel3@ITM_STY_SEQ_NBR_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleDept31",
				"LStyleDept31, DSBRD lookup(split3@fioDept3@BRD_ID == DSBRD@BRD_ID",
				"     && split3@fioDept3@DIV_ID == DSBRD@DIV_ID",
				"     && split3@fioDept3@DEPT_ID == DSBRD@DEPT_ID",
				"     && split3@fioDept3@CLS_ID == DSBRD@CLS_ID",
				"     && split3@fioDept3@SCLS_ID == DSBRD@SCLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleDept32",
				"LStyleDept32 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          CHNL_ID,",
				"          MKT_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          STR_NBR,",
				"          BRD_ID = split3@fioDept3@BRD_ID,",
				"          DIV_ID = split3@fioDept3@DIV_ID,",
				"          DEPT_ID = split3@fioDept3@DEPT_ID,",
				"          CLS_ID = split3@fioDept3@CLS_ID,",
				"          SCLS_ID = split3@fioDept3@SCLS_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S = split3@fioDept3@ITM_STY_SEQ_NBR_S,",
				"          DESCRIPTION,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC,",
				"          SCLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loStyleDept3",
				"split3@fiostyleColor3, DSBRD lookup(split3@fiostyleColor3@BRD_ID == DSBRD@BRD_ID",
				"     && split3@fiostyleColor3@DIV_ID == DSBRD@DIV_ID",
				"     && split3@fiostyleColor3@DEPT_ID == DSBRD@DEPT_ID",
				"     && split3@fiostyleColor3@CLS_ID == DSBRD@CLS_ID",
				"     && split3@fiostyleColor3@SCLS_ID == DSBRD@SCLS_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleColor31",
				"LStyleColor31, DSItem lookup(split3@fiostyleColor3@ITM_STY_CLR_SEQ_NBR_S == DSItem@ITM_STY_CLR_SEQ_NBR_S",
				"     && split3@fiostyleColor3@ITM_STY_SEQ_NBR_S == DSItem@ITM_STY_SEQ_NBR_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LStyleColor32",
				"LStyleColor32 select(mapColumn(",
				"          PMOTN_REQ_ID_S,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PROC_STAT_CD,",
				"          PRC_SYS_EXT_DTTM,",
				"          EXTL_PMOTN_IND,",
				"          MDSE_LVL_CD,",
				"          CHNL_ID,",
				"          MKT_ID,",
				"          PMOTN_APPL_TYP_CD,",
				"          MDSE_HIER_LVL_SEQ_NBR_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          MIN_QTY,",
				"          PMOTN_PRC_UN_AMT,",
				"          PMOTN_PCT_OFF_RAT,",
				"          PMOTN_DLR_OFF_AMT,",
				"          PMOTN_DSCT_CD,",
				"          PMOTN_DESC,",
				"          STR_NBR,",
				"          BRD_ID = split3@fiostyleColor3@BRD_ID,",
				"          DIV_ID = split3@fiostyleColor3@DIV_ID,",
				"          DEPT_ID = split3@fiostyleColor3@DEPT_ID,",
				"          CLS_ID = split3@fiostyleColor3@CLS_ID,",
				"          SCLS_ID = split3@fiostyleColor3@SCLS_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S = DIFF_1_ID,",
				"          ITM_STY_SEQ_NBR_S = ITM_STY_NBR,",
				"          DESCRIPTION,",
				"          BRD_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC,",
				"          SCLS_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loStyleColor3",
				"XDiv3, StyleDept, XClass3, loSubclass3, XDept3, StyleColor union(byName: true)~> FStyleCombine3",
				"FStyleCombine3, DSPromoUser lookup(PMOTN_REQ_ID_S == PMOTN_GRP_ID_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LDEPT",
				"loStyleColor3 cast(output(",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer",
				"     ),",
				"     errors: true) ~> StyleColor",
				"loStyleDept3 cast(output(",
				"          ITM_STY_SEQ_NBR_S as integer",
				"     ),",
				"     errors: true) ~> StyleDept",
				"LDEPT select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          DESCRIPTION,",
				"          PMOTN_REQ_ID_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR = ITM_STY_SEQ_NBR_S,",
				"          DIFF_1_ID = ITM_STY_CLR_SEQ_NBR_S,",
				"          CRT_UPDT_USER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoDEPT",
				"xoDEPT, DSTMRCY lookup(xoDEPT@MDSE_LVL_CD == DSTMRCY@MDSE_LVL_CD,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LTMRCY",
				"LTMRCY select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_CD = xoDEPT@MDSE_LVL_CD,",
				"          PMOTN_APPL_TYP_CD,",
				"          DESCRIPTION,",
				"          PMOTN_REQ_ID_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          CRT_UPDT_USER_ID,",
				"          MDSE_LVL_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoTMRCY",
				"xoTMRCY aggregate(groupBy(ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          PMOTN_REQ_ID_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S),",
				"     each(match(!in(['ITM_STY_NBR','DIFF_1_ID','PMOTN_REQ_ID_S','PRC_GRP_ZN_SEQ_NBR_S'],name)), $$ = first($$))) ~> rmItems1",
				"rmItems1 select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_DESC,",
				"          PMOTN_APPL_TYP_CD,",
				"          DESCRIPTION,",
				"          PMOTN_REQ_ID_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          CRT_UPDT_USER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoDiffRej",
				"xoDiffRej, DSCurrency lookup(xoDiffRej@PRC_GRP_ZN_SEQ_NBR_S == DSCurrency@PRC_GRP_ZN_SEQ_NBR_S,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LCC3",
				"LCC3 select(mapColumn(",
				"          BRD_ID,",
				"          BRD_DESC,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          PMOTN_STRT_DT,",
				"          PMOTN_END_DT,",
				"          PMOTN_DESC,",
				"          MIN_QTY,",
				"          MDSE_LVL_DESC,",
				"          PMOTN_APPL_TYP_CD,",
				"          PMOTN_REQ_ID_S,",
				"          PRC_GRP_ZN_SEQ_NBR_S = xoDiffRej@PRC_GRP_ZN_SEQ_NBR_S,",
				"          ITM_STY_NBR,",
				"          DIFF_1_ID,",
				"          CNCY_CD,",
				"          CRT_UPDT_USER_ID,",
				"          DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xoitemBrdRej",
				"xoitemBrdRej sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT221-RPMOutbound_Approved_PromoRejects3_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFBrdMktChnDiffRej"
			]
		}
	}
}