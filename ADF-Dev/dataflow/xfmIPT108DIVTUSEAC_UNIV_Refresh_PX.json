{
	"name": "xfmIPT108DIVTUSEAC_UNIV_Refresh_PX",
	"properties": {
		"folder": {
			"name": "10-DIVTPriceLadders"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_srcIPT108DIVTUSEAC_UNIV_Extract_PX_DS_Universal_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSUniversal"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_USEAC_UNIV_USER_ACS_T_ASIA",
						"type": "DatasetReference"
					},
					"name": "USEACUNIVUSERACST"
				}
			],
			"transformations": [
				{
					"name": "RDBrdId"
				},
				{
					"name": "rdoBrdId"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          DIV_ID as integer,",
				"          PORTAL_ID as string,",
				"          EML_ADDR_TXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSUniversal",
				"DSUniversal aggregate(groupBy(BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID),",
				"     each(match(!in(['BRD_ID','MKT_ID','CHNL_ID'],name)), $$ = first($$))) ~> RDBrdId",
				"RDBrdId select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> rdoBrdId",
				"rdoBrdId sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('USEAC_UNIV_USER_ACS_T.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> USEACUNIVUSERACST"
			]
		}
	}
}