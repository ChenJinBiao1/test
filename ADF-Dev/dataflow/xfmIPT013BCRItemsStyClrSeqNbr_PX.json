{
	"name": "xfmIPT013BCRItemsStyClrSeqNbr_PX",
	"properties": {
		"folder": {
			"name": "01-BCRItems"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT012BCRItemsGlobalCCNbr_PX_DS_Items_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSItemsSource"
				},
				{
					"dataset": {
						"referenceName": "AB_ITMSCC_ITM_STY_CC_T",
						"type": "DatasetReference"
					},
					"name": "IPTITMSCCSource"
				},
				{
					"dataset": {
						"referenceName": "AB_MHIERSEQNBR_ITMSCC",
						"type": "DatasetReference"
					},
					"name": "IPTITMSCCSeqNbrSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT013BCRItemsStyClrSeqNbr_PX_DS_ItemStyClr_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSItemStyClrSink"
				}
			],
			"transformations": [
				{
					"name": "RDItemStyClrSelect"
				},
				{
					"name": "LItmStyCCSeqNbrLookup"
				},
				{
					"name": "LItmStyCCSeqNbrDerivedColumn"
				},
				{
					"name": "LItmStyCCSeqNbrSplit"
				},
				{
					"name": "LItemStySeqNbrSelect"
				},
				{
					"name": "LItmStyCCSeqNbrNotMatchSelect"
				},
				{
					"name": "LItmStyClrSeqNbrLookup"
				},
				{
					"name": "FItemStySeqNbrUnion"
				},
				{
					"name": "IPTITMSCCSeqNbrDerivedColumn"
				},
				{
					"name": "LItmStyCCSeqNbrNotMatchDerivedColumn"
				},
				{
					"name": "LItmStyClrSeqNbrSelect"
				},
				{
					"name": "RDItemStyClr"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as integer,",
				"          DIV_DESC as string,",
				"          DEPT_ID as integer,",
				"          DEPT_DESC as string,",
				"          CLS_ID as integer,",
				"          CLS_DESC as string,",
				"          SCLS_ID as integer,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as integer,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as integer,",
				"          SEASON_DESC as string,",
				"          MKT_DIFF1_ID as string,",
				"          MKT_DIF2_ID as string,",
				"          ITM_SKU_NBR as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          MDSE_HIER_SEQ_NBR_S as integer,",
				"          GLBL_ITM_STY_NBR as string,",
				"          GLBL_ITM_STY_CC_NBR as string,",
				"          {GLBL_SKU_NBR } as string,",
				"          CO_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSItemsSource",
				"source(output(",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_CC_NBR as string,",
				"          MKT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTITMSCCSource",
				"source(output(",
				"          ITM_STY_CLR_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTITMSCCSeqNbrSource",
				"DSItemsSource select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_CC_NBR,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIFF1_ID,",
				"          MKT_DIF2_ID,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          {GLBL_SKU_NBR }",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RDItemStyClrSelect",
				"RDItemStyClr, IPTITMSCCSource lookup(GLBL_ITM_STY_CC_NBR == IPTITMSCCSource@ITM_STY_CC_NBR",
				"     && RDItemStyClr@MKT_ID == IPTITMSCCSource@MKT_ID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LItmStyCCSeqNbrLookup",
				"LItmStyCCSeqNbrLookup derive(IsMatch = isMatch()) ~> LItmStyCCSeqNbrDerivedColumn",
				"LItmStyCCSeqNbrDerivedColumn split(IsMatch==true(),",
				"     disjoint: false) ~> LItmStyCCSeqNbrSplit@(LItmStyCCSeqNbrLookupMatch, LItmStyCCSeqNbrLookupNotMatch)",
				"LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupMatch select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID = LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupMatch@MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR = LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupMatch@ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          GLBL_ITM_STY_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_CC_NBR = LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupMatch@ITM_STY_CC_NBR,",
				"          MKT_ID = LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupMatch@MKT_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LItemStySeqNbrSelect",
				"LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupNotMatch select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID = LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupNotMatch@MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR = LItmStyCCSeqNbrSplit@LItmStyCCSeqNbrLookupNotMatch@ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          GLBL_ITM_STY_NBR,",
				"          {GLBL_SKU_NBR }",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LItmStyCCSeqNbrNotMatchSelect",
				"LItmStyCCSeqNbrNotMatchDerivedColumn, IPTITMSCCSeqNbrDerivedColumn lookup(AddColumn == AddColum,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LItmStyClrSeqNbrLookup",
				"LItemStySeqNbrSelect, LItmStyClrSeqNbrSelect union(byName: true)~> FItemStySeqNbrUnion",
				"IPTITMSCCSeqNbrSource derive(AddColum = 1) ~> IPTITMSCCSeqNbrDerivedColumn",
				"LItmStyCCSeqNbrNotMatchSelect derive(AddColumn = 1) ~> LItmStyCCSeqNbrNotMatchDerivedColumn",
				"LItmStyClrSeqNbrLookup select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          GLBL_ITM_STY_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_CLR_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LItmStyClrSeqNbrSelect",
				"RDItemStyClrSelect aggregate(groupBy(MKT_ID,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR),",
				"     each(match(!in(['MKT_ID','GLBL_ITM_STY_NBR','GLBL_ITM_STY_CC_NBR'],name)), $$ = first($$))) ~> RDItemStyClr",
				"FItemStySeqNbrUnion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          CHNL_ID as string,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as string,",
				"          DIV_DESC as string,",
				"          DEPT_ID as string,",
				"          DEPT_DESC as string,",
				"          CLS_ID as string,",
				"          CLS_DESC as string,",
				"          SCLS_ID as string,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as string,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as string,",
				"          SEASON_DESC as string,",
				"          MKT_DIFF1_ID as string,",
				"          MKT_DIF2_ID as string,",
				"          ITM_SKU_NBR as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          MDSE_HIER_SEQ_NBR_S as string,",
				"          GLBL_ITM_STY_NBR as string,",
				"          GLBL_ITM_STY_CC_NBR as string,",
				"          {GLBL_SKU_NBR } as string,",
				"          ITM_STY_CLR_SEQ_NBR_S as string",
				"     ),",
				"     partitionFileNames:[(concat('xfmIPT013BCRItemsStyClrSeqNbr_PX.DS_ItemStyClr.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_CC_NBR,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIFF1_ID,",
				"          MKT_DIF2_ID,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_CLR_SEQ_NBR_S",
				"     ),",
				"     partitionBy('hash', 1)) ~> DSItemStyClrSink"
			]
		}
	}
}