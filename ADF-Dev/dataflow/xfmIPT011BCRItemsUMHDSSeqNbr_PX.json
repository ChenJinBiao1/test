{
	"name": "xfmIPT011BCRItemsUMHDSSeqNbr_PX",
	"properties": {
		"folder": {
			"name": "01-BCRItems"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_srcIPT011BCRItemsLegacyInd_PX_DS_UMHDS",
						"type": "DatasetReference"
					},
					"name": "DSUMHDSSource"
				},
				{
					"dataset": {
						"referenceName": "AB_UMHDS_UNIV_MDSE_HIER_T",
						"type": "DatasetReference"
					},
					"name": "IPTUMHDSSource"
				},
				{
					"dataset": {
						"referenceName": "AB_MHIERSEQNBR_UNIV",
						"type": "DatasetReference"
					},
					"name": "IPTUMHDSRejRecSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT011BCRItemsUMHDSSeqNbr_PX_DS_UMHDSLoad",
						"type": "DatasetReference"
					},
					"name": "DSUMHDSLoadSink"
				}
			],
			"transformations": [
				{
					"name": "LUMHDSSeqNbrLookup"
				},
				{
					"name": "LUMHDSSeqNbrDerivedColumn"
				},
				{
					"name": "LUMHDSSeqNbrSplit"
				},
				{
					"name": "LUMHDSSeqNbrMatchSelect"
				},
				{
					"name": "LUMHDSSeqNbrNotMatchSelect"
				},
				{
					"name": "LRejSeqNbrLookup"
				},
				{
					"name": "LRejSeqNbrLookupSelect"
				},
				{
					"name": "FUMHDSSeqNbrUnion"
				},
				{
					"name": "IPTUMHDSRejRecDerivedColumn"
				},
				{
					"name": "NotMatchDerivedColumn"
				},
				{
					"name": "RDDistinctSubClass"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CO_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as integer,",
				"          DIV_DESC as string,",
				"          DEPT_ID as integer,",
				"          DEPT_DESC as string,",
				"          CLS_ID as integer,",
				"          CLS_DESC as string,",
				"          SCLS_ID as integer,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as string,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as integer,",
				"          SEASON_DESC as string,",
				"          MKT_DIF2_ID as string,",
				"          MKT_DIFF1_ID as string,",
				"          ITM_SKU_NBR as integer,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          BrdId1 as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSUMHDSSource",
				"source(output(",
				"          BRD_ID as integer,",
				"          DIV_ID as integer,",
				"          DEPT_ID as integer,",
				"          CLS_ID as integer,",
				"          SCLS_ID as integer,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTUMHDSSource",
				"source(output(",
				"          UNIV_MDSE_HIER_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTUMHDSRejRecSource",
				"RDDistinctSubClass, IPTUMHDSSource lookup(RDDistinctSubClass@BRD_ID == IPTUMHDSSource@BRD_ID",
				"     && RDDistinctSubClass@DIV_ID == IPTUMHDSSource@DIV_ID",
				"     && RDDistinctSubClass@DEPT_ID == IPTUMHDSSource@DEPT_ID",
				"     && RDDistinctSubClass@CLS_ID == IPTUMHDSSource@CLS_ID",
				"     && RDDistinctSubClass@SCLS_ID == IPTUMHDSSource@SCLS_ID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LUMHDSSeqNbrLookup",
				"LUMHDSSeqNbrLookup derive(IsMatch = isMatch()) ~> LUMHDSSeqNbrDerivedColumn",
				"LUMHDSSeqNbrDerivedColumn split(IsMatch==true(),",
				"     disjoint: false) ~> LUMHDSSeqNbrSplit@(LUMHDSSeqNbrMatch, LUMHDSSeqNbrNotMatch)",
				"LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch select(mapColumn(",
				"          BRD_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CO_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          BrdId1,",
				"          BRD_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@BRD_ID,",
				"          DIV_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@DIV_ID,",
				"          DEPT_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@DEPT_ID,",
				"          CLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@CLS_ID,",
				"          SCLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrMatch@SCLS_ID,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LUMHDSSeqNbrMatchSelect",
				"LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch select(mapColumn(",
				"          BRD_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CO_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          BrdId1,",
				"          BRD_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@BRD_ID,",
				"          DIV_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@DIV_ID,",
				"          DEPT_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@DEPT_ID,",
				"          CLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@CLS_ID,",
				"          SCLS_ID = LUMHDSSeqNbrSplit@LUMHDSSeqNbrNotMatch@SCLS_ID,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LUMHDSSeqNbrNotMatchSelect",
				"NotMatchDerivedColumn, IPTUMHDSRejRecDerivedColumn lookup(NotMatchDerivedColumn@AddColumn == IPTUMHDSRejRecDerivedColumn@AddColumn,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LRejSeqNbrLookup",
				"LRejSeqNbrLookup select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CO_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          BrdId1,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S = LUMHDSSeqNbrNotMatchSelect@UNIV_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LRejSeqNbrLookupSelect",
				"LUMHDSSeqNbrMatchSelect, LRejSeqNbrLookupSelect union(byName: true)~> FUMHDSSeqNbrUnion",
				"IPTUMHDSRejRecSource derive(AddColumn = 1) ~> IPTUMHDSRejRecDerivedColumn",
				"LUMHDSSeqNbrNotMatchSelect derive(AddColumn = 1) ~> NotMatchDerivedColumn",
				"DSUMHDSSource aggregate(groupBy(BRD_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID),",
				"     each(match(!in(['BRD_ID','DIV_ID','DEPT_ID','CLS_ID','SCLS_ID'],name)), $$ = first($$))) ~> RDDistinctSubClass",
				"FUMHDSSeqNbrUnion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          CHNL_ID as string,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CO_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as string,",
				"          DIV_DESC as string,",
				"          DEPT_ID as string,",
				"          DEPT_DESC as string,",
				"          CLS_ID as string,",
				"          CLS_DESC as string,",
				"          SCLS_ID as string,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as string,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as string,",
				"          SEASON_DESC as string,",
				"          MKT_DIFF1_ID as string,",
				"          MKT_DIF2_ID as string,",
				"          ITM_SKU_NBR as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S as string,",
				"          BrdId1 as string",
				"     ),",
				"     partitionFileNames:[(concat('xfmIPT011BCRItemsUMHDSSeqNbr_PX.DS_UMHDSLoad.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CO_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_CC_NBR,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIFF1_ID,",
				"          MKT_DIF2_ID,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          UNIV_MDSE_HIER_SEQ_NBR_S,",
				"          BrdId1",
				"     ),",
				"     partitionBy('hash', 1)) ~> DSUMHDSLoadSink"
			]
		}
	}
}