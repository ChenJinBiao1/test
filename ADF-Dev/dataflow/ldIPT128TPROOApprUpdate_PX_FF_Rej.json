{
	"name": "ldIPT128TPROOApprUpdate_PX_FF_Rej",
	"properties": {
		"folder": {
			"name": "12-PriceUpdatesRPM"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_TPROO_PMOTN_REQ_HDR_OTPT_T_128_Temp",
						"type": "DatasetReference"
					},
					"name": "TPROOTemp"
				},
				{
					"dataset": {
						"referenceName": "AB_ldIPT128TPROOApprUpdate_PX_FF_TPROORej",
						"type": "DatasetReference"
					},
					"name": "FFTPROORej"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_ldIPT128TPROOApprUpdate_PX_FF_TPROORej",
						"type": "DatasetReference"
					},
					"name": "FFTPROORej1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     PMOTN_REQ_ID_S as integer (0),",
				"     PMOTN_STRT_DT as string (toString(null())),",
				"     PMOTN_END_DT as string (toString(null())),",
				"     PROC_STAT_CD as string (toString(null())),",
				"     PRC_SYS_EXT_DTTM as string (toString(null())),",
				"     EXTL_PMOTN_IND as string (toString(null())),",
				"     MDSE_LVL_CD as string (toString(null())),",
				"     CHNL_ID as integer (0),",
				"     MKT_ID as string (toString(null())),",
				"     PMOTN_APPL_TYP_CD as string (toString(null())),",
				"     MDSE_HIER_LVL_SEQ_NBR_S as integer (0),",
				"     PRC_GRP_ZN_SEQ_NBR_S as integer (0),",
				"     MIN_QTY as integer (0),",
				"     PMOTN_PRC_UN_AMT as decimal(10,0),",
				"     PMOTN_PCT_OFF_RAT as decimal(10,0),",
				"     PMOTN_DLR_OFF_AMT as decimal(10,0),",
				"     PMOTN_DSCT_CD as string (toString(null())),",
				"     PMOTN_DESC as string (toString(null())),",
				"     STR_NBR as integer (0),",
				"     BRD_ID as integer (0),",
				"     DIV_ID as integer (0),",
				"     DEPT_ID as integer (0),",
				"     CLS_ID as integer (0),",
				"     ITM_STY_CLR_SEQ_NBR_S as integer (0),",
				"     ITM_STY_SEQ_NBR_S as integer (0),",
				"     SCLS_ID as integer (0),",
				"     ITM_STY_NBR as string (toString(null())),",
				"     MKT_DIFF1_ID as string (toString(null())),",
				"     CNCY_CD as string (toString(null()))",
				"}",
				"source(output(",
				"          PMOTN_REQ_ID_S as integer,",
				"          PMOTN_STRT_DT as timestamp,",
				"          PMOTN_END_DT as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as timestamp,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as integer,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          MDSE_HIER_LVL_SEQ_NBR_S as integer,",
				"          PRC_GRP_ZN_SEQ_NBR_S as integer,",
				"          MIN_QTY as integer,",
				"          PMOTN_PRC_UN_AMT as decimal(10,0),",
				"          PMOTN_PCT_OFF_RAT as decimal(10,0),",
				"          PMOTN_DLR_OFF_AMT as decimal(10,0),",
				"          PMOTN_DSCT_CD as string,",
				"          PMOTN_DESC as string,",
				"          STR_NBR as integer,",
				"          BRD_ID as integer,",
				"          DIV_ID as integer,",
				"          DEPT_ID as integer,",
				"          CLS_ID as integer,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          SCLS_ID as integer,",
				"          ITM_STY_NBR as string,",
				"          MKT_DIFF1_ID as string,",
				"          CNCY_CD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TPROOTemp",
				"source(output(",
				"          PMOTN_REQ_ID_S as integer,",
				"          PMOTN_STRT_DT as timestamp,",
				"          PMOTN_END_DT as timestamp,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as timestamp,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as integer,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          MDSE_HIER_LVL_SEQ_NBR_S as integer,",
				"          PRC_GRP_ZN_SEQ_NBR_S as integer,",
				"          MIN_QTY as integer,",
				"          PMOTN_PRC_UN_AMT as decimal(10,0),",
				"          PMOTN_PCT_OFF_RAT as decimal(10,0),",
				"          PMOTN_DLR_OFF_AMT as decimal(10,0),",
				"          PMOTN_DSCT_CD as string,",
				"          PMOTN_DESC as string,",
				"          STR_NBR as integer,",
				"          BRD_ID as integer,",
				"          DIV_ID as integer,",
				"          DEPT_ID as integer,",
				"          CLS_ID as integer,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          SCLS_ID as integer,",
				"          ITM_STY_NBR as string,",
				"          MKT_DIFF1_ID as string,",
				"          CNCY_CD as string,",
				"          sqlcode as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FFTPROORej",
				"TPROOTemp filter(PMOTN_REQ_ID_S == $PMOTN_REQ_ID_S || isNull(PMOTN_REQ_ID_S)  && \r",
				"PMOTN_STRT_DT ==toTimestamp($PMOTN_STRT_DT)  || isNull(PMOTN_STRT_DT) &&\r",
				"PMOTN_END_DT ==toTimestamp($PMOTN_END_DT)  || isNull(PMOTN_END_DT) &&\r",
				"PROC_STAT_CD == $PROC_STAT_CD || isNull(PROC_STAT_CD)  && \r",
				"PRC_SYS_EXT_DTTM ==toTimestamp($PRC_SYS_EXT_DTTM)  || isNull(PRC_SYS_EXT_DTTM) &&\r",
				"EXTL_PMOTN_IND == $EXTL_PMOTN_IND || isNull(EXTL_PMOTN_IND)  && \r",
				"MDSE_LVL_CD == $MDSE_LVL_CD || isNull(MDSE_LVL_CD)  && \r",
				"CHNL_ID == $CHNL_ID || isNull(CHNL_ID)  && \r",
				"MKT_ID == $MKT_ID || isNull(MKT_ID)  && \r",
				"PMOTN_APPL_TYP_CD == $PMOTN_APPL_TYP_CD || isNull(PMOTN_APPL_TYP_CD)  && \r",
				"MDSE_HIER_LVL_SEQ_NBR_S == $MDSE_HIER_LVL_SEQ_NBR_S || isNull(MDSE_HIER_LVL_SEQ_NBR_S)  && \r",
				"PRC_GRP_ZN_SEQ_NBR_S == $PRC_GRP_ZN_SEQ_NBR_S || isNull(PRC_GRP_ZN_SEQ_NBR_S)  && \r",
				"MIN_QTY == $MIN_QTY || isNull(MIN_QTY)  && \r",
				"PMOTN_PRC_UN_AMT == $PMOTN_PRC_UN_AMT || isNull(PMOTN_PRC_UN_AMT)  && \r",
				"PMOTN_PCT_OFF_RAT == $PMOTN_PCT_OFF_RAT || isNull(PMOTN_PCT_OFF_RAT)  && \r",
				"PMOTN_DLR_OFF_AMT == $PMOTN_DLR_OFF_AMT || isNull(PMOTN_DLR_OFF_AMT)  && \r",
				"PMOTN_DSCT_CD == $PMOTN_DSCT_CD || isNull(PMOTN_DSCT_CD)  && \r",
				"PMOTN_DESC == $PMOTN_DESC || isNull(PMOTN_DESC)  && \r",
				"STR_NBR == $STR_NBR || isNull(STR_NBR)  && \r",
				"BRD_ID == $BRD_ID || isNull(BRD_ID)  && \r",
				"DIV_ID == $DIV_ID || isNull(DIV_ID)  && \r",
				"DEPT_ID == $DEPT_ID || isNull(DEPT_ID)  && \r",
				"CLS_ID == $CLS_ID || isNull(CLS_ID)  && \r",
				"ITM_STY_CLR_SEQ_NBR_S == $ITM_STY_CLR_SEQ_NBR_S || isNull(ITM_STY_CLR_SEQ_NBR_S)  && \r",
				"ITM_STY_SEQ_NBR_S == $ITM_STY_SEQ_NBR_S || isNull(ITM_STY_SEQ_NBR_S)  && \r",
				"SCLS_ID == $SCLS_ID || isNull(SCLS_ID)  && \r",
				"ITM_STY_NBR == $ITM_STY_NBR || isNull(ITM_STY_NBR)  && \r",
				"MKT_DIFF1_ID == $MKT_DIFF1_ID || isNull(MKT_DIFF1_ID)  && \r",
				"CNCY_CD == $CNCY_CD || isNull(CNCY_CD)) ~> filter1",
				"filter1 derive(DATE_TIME = currentDate()) ~> derivedColumn1",
				"derivedColumn1, FFTPROORej union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PMOTN_REQ_ID_S as string,",
				"          PMOTN_STRT_DT as string,",
				"          PMOTN_END_DT as string,",
				"          PROC_STAT_CD as string,",
				"          PRC_SYS_EXT_DTTM as string,",
				"          EXTL_PMOTN_IND as string,",
				"          MDSE_LVL_CD as string,",
				"          CHNL_ID as string,",
				"          MKT_ID as string,",
				"          PMOTN_APPL_TYP_CD as string,",
				"          MDSE_HIER_LVL_SEQ_NBR_S as string,",
				"          PRC_GRP_ZN_SEQ_NBR_S as string,",
				"          MIN_QTY as string,",
				"          PMOTN_PRC_UN_AMT as string,",
				"          PMOTN_PCT_OFF_RAT as string,",
				"          PMOTN_DLR_OFF_AMT as string,",
				"          PMOTN_DSCT_CD as string,",
				"          PMOTN_DESC as string,",
				"          STR_NBR as string,",
				"          BRD_ID as string,",
				"          DIV_ID as string,",
				"          DEPT_ID as string,",
				"          CLS_ID as string,",
				"          ITM_STY_CLR_SEQ_NBR_S as string,",
				"          ITM_STY_SEQ_NBR_S as string,",
				"          SCLS_ID as string,",
				"          ITM_STY_NBR as string,",
				"          MKT_DIFF1_ID as string,",
				"          CNCY_CD as string,",
				"          sqlcode as string",
				"     ),",
				"     partitionFileNames:['ldIPT128TPROOApprUpdate_PX.FF_TPROORej.txt'],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FFTPROORej1"
			]
		}
	}
}