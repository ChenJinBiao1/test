{
	"name": "xfmIPT222A_RPMOutbound_ApprPromoRejects_PX",
	"properties": {
		"folder": {
			"name": "22-E2EPricingValidations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT221F_CombineRPMLoadFiles_DS_ComplexPromo_combine",
						"type": "DatasetReference"
					},
					"name": "DSComplexPromo"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT_TPROO_UHILV_OPORI_222A",
						"type": "DatasetReference"
					},
					"name": "IPTTPROOUHILVOPORI"
				},
				{
					"dataset": {
						"referenceName": "AB_RPM_TSPCT_222A",
						"type": "DatasetReference"
					},
					"name": "RPMTSPCT"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_IPT222_Approved_Promotions_Errored_In_RPM_ASIA",
						"type": "DatasetReference"
					},
					"name": "SeqBRDAPPromo"
				},
				{
					"dataset": {
						"referenceName": "AB_IPT22_ApprovedPromo_Complete_RPMStaging_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSPromoComplete"
				}
			],
			"transformations": [
				{
					"name": "RDPromoID"
				},
				{
					"name": "LBrdMktChnl"
				},
				{
					"name": "fiBrdMktChnl"
				},
				{
					"name": "foBrdMktChnl"
				},
				{
					"name": "LPromoID"
				},
				{
					"name": "loBrdMktChnl"
				},
				{
					"name": "loPromoErrors"
				},
				{
					"name": "XApprovePromoErr"
				},
				{
					"name": "outAppr"
				},
				{
					"name": "RemoveDuplicatesItem"
				},
				{
					"name": "liItem"
				},
				{
					"name": "loPromoComplete"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pBrandId as integer (1),",
				"     pChnlId as integer (1),",
				"     pMarketId as string ('8'),",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          PROMO_ID as integer,",
				"          PROMO_NAME as string,",
				"          COMP_DISPLAY_ID as string,",
				"          PROMO_COMP_ID as integer,",
				"          PROMO_COMP_DETAIL_ID as integer,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID as string,",
				"          THRESHOLD_ID as integer,",
				"          THRESHOLD_DISPLAY_ID as string,",
				"          MERCH_TYPE as integer,",
				"          DIVISION as integer,",
				"          GROUP_NO as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          DIFF_ID as string,",
				"          ITEM as string,",
				"          ATTRIBUTE_1 as string,",
				"          ATTRIBUTE_2 as string,",
				"          ATTRIBUTE_3 as string,",
				"          ZONE_NODE_TYPE as integer,",
				"          ZONE_ID as integer,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as integer,",
				"          START_DATE as timestamp,",
				"          END_DATE as timestamp,",
				"          IGNORE_CONSTRAINTS as integer,",
				"          THRESHOLD_NAME as string,",
				"          CURRENCY_CODE as string,",
				"          QUALIFICATION_TYPE as integer,",
				"          THRESHOLD_TYPE as integer,",
				"          THRESHOLD_AMOUNT as decimal(15,2),",
				"          THRESHOLD_CURRENCY as string,",
				"          THRESHOLD_QUANTITY as decimal(15,2),",
				"          CHANGE_TYPE as string,",
				"          CHANGE_AMOUNT as decimal(15,2),",
				"          CHANGE_CURRENCY as string,",
				"          CHANGE_PERCENT as decimal(15,2),",
				"          CHANGE_UOM as string,",
				"          AUTO_APPROVE_IND as integer,",
				"          PROCESS_ID as integer,",
				"          STATUS as string,",
				"          ERR_MSG_TXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSComplexPromo",
				"source(output(",
				"          PROMO_ID as integer,",
				"          PMOTN_REQ_ID_S as integer,",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          { CHNL_ID} as integer,",
				"          DIV_ID as integer,",
				"          DIV_DESC as string,",
				"          CRT_UPDT_USER_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTTPROOUHILVOPORI",
				"source(output(",
				"          PMOTN_CMPLX_THLD_ID_S as integer,",
				"          PROMO_ID as integer,",
				"          PROMO_NAME as string,",
				"          MERCH_TYPE as integer,",
				"          DIVISION as integer,",
				"          GROUP_NO as integer,",
				"          DEPT as integer,",
				"          CLASS as integer,",
				"          SUBCLASS as integer,",
				"          DIFF_ID as string,",
				"          ITEM as string,",
				"          LOCATION as integer,",
				"          APPLY_TO_CODE as integer,",
				"          START_DATE as date,",
				"          END_DATE as date,",
				"          CURRENCY_CODE as string,",
				"          THRESHOLD_QUANTITY as integer,",
				"          CHANGE_TYPE as integer,",
				"          CHANGE_AMOUNT as integer,",
				"          CHANGE_CURRENCY as string,",
				"          CHANGE_PERCENT as integer,",
				"          CHANGE_UOM as string,",
				"          STATUS as string,",
				"          ERR_MSG_TXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RPMTSPCT",
				"DSComplexPromo aggregate(groupBy(PROMO_ID),",
				"     each(match(!in(['PROMO_ID'],name)), $$ = first($$))) ~> RDPromoID",
				"RDPromoID, IPTTPROOUHILVOPORI lookup(RDPromoID@PROMO_ID == IPTTPROOUHILVOPORI@PROMO_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LBrdMktChnl",
				"loBrdMktChnl filter(BRD_ID == $pBrandId && { CHNL_ID} == $pChnlId && MKT_ID == $pMarketId) ~> fiBrdMktChnl",
				"fiBrdMktChnl select(mapColumn(",
				"          PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION,",
				"          APPLY_TO_CODE,",
				"          START_DATE,",
				"          END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT,",
				"          PMOTN_REQ_ID_S,",
				"          BRD_ID,",
				"          MKT_ID,",
				"          { CHNL_ID},",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          CRT_UPDT_USER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> foBrdMktChnl",
				"foBrdMktChnl, RPMTSPCT lookup(foBrdMktChnl@PROMO_ID == RPMTSPCT@PROMO_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LPromoID",
				"LBrdMktChnl select(mapColumn(",
				"          PROMO_ID = RDPromoID@PROMO_ID,",
				"          PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION,",
				"          APPLY_TO_CODE,",
				"          START_DATE,",
				"          END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE,",
				"          CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY,",
				"          CHANGE_PERCENT,",
				"          CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS,",
				"          ERR_MSG_TXT,",
				"          PMOTN_REQ_ID_S,",
				"          BRD_ID,",
				"          MKT_ID,",
				"          { CHNL_ID},",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          CRT_UPDT_USER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loBrdMktChnl",
				"LPromoID select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID = { CHNL_ID},",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          PROMO_ID = foBrdMktChnl@PROMO_ID,",
				"          PROMO_NAME = foBrdMktChnl@PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = foBrdMktChnl@MERCH_TYPE,",
				"          DIVISION = foBrdMktChnl@DIVISION,",
				"          GROUP_NO = foBrdMktChnl@GROUP_NO,",
				"          DEPT = foBrdMktChnl@DEPT,",
				"          CLASS = foBrdMktChnl@CLASS,",
				"          SUBCLASS = foBrdMktChnl@SUBCLASS,",
				"          DIFF_ID = foBrdMktChnl@DIFF_ID,",
				"          ITEM = foBrdMktChnl@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          PMOTN_CMPLX_THLD_ID_S,",
				"          LOCATION = foBrdMktChnl@LOCATION,",
				"          APPLY_TO_CODE = foBrdMktChnl@APPLY_TO_CODE,",
				"          START_DATE = foBrdMktChnl@START_DATE,",
				"          END_DATE = foBrdMktChnl@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE = foBrdMktChnl@CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY = foBrdMktChnl@THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE = foBrdMktChnl@CHANGE_TYPE,",
				"          CHANGE_AMOUNT = foBrdMktChnl@CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY = foBrdMktChnl@CHANGE_CURRENCY,",
				"          CHANGE_PERCENT = foBrdMktChnl@CHANGE_PERCENT,",
				"          CHANGE_UOM = foBrdMktChnl@CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS = foBrdMktChnl@STATUS,",
				"          ERR_MSG_TXT = foBrdMktChnl@ERR_MSG_TXT,",
				"          PMOTN_REQ_ID_S,",
				"          CRT_UPDT_USER_ID,",
				"          PROMO_ID = RPMTSPCT@PROMO_ID,",
				"          PROMO_NAME = RPMTSPCT@PROMO_NAME,",
				"          MERCH_TYPE = RPMTSPCT@MERCH_TYPE,",
				"          DIVISION = RPMTSPCT@DIVISION,",
				"          GROUP_NO = RPMTSPCT@GROUP_NO,",
				"          DEPT = RPMTSPCT@DEPT,",
				"          CLASS = RPMTSPCT@CLASS,",
				"          SUBCLASS = RPMTSPCT@SUBCLASS,",
				"          DIFF_ID = RPMTSPCT@DIFF_ID,",
				"          ITEM = RPMTSPCT@ITEM,",
				"          LOCATION = RPMTSPCT@LOCATION,",
				"          APPLY_TO_CODE = RPMTSPCT@APPLY_TO_CODE,",
				"          START_DATE = RPMTSPCT@START_DATE,",
				"          END_DATE = RPMTSPCT@END_DATE,",
				"          CURRENCY_CODE = RPMTSPCT@CURRENCY_CODE,",
				"          THRESHOLD_QUANTITY = RPMTSPCT@THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE = RPMTSPCT@CHANGE_TYPE,",
				"          CHANGE_AMOUNT = RPMTSPCT@CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY = RPMTSPCT@CHANGE_CURRENCY,",
				"          CHANGE_PERCENT = RPMTSPCT@CHANGE_PERCENT,",
				"          CHANGE_UOM = RPMTSPCT@CHANGE_UOM,",
				"          STATUS = RPMTSPCT@STATUS,",
				"          ERR_MSG_TXT = RPMTSPCT@ERR_MSG_TXT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loPromoErrors",
				"loPromoErrors derive(MERCH_TYPE = iif(MERCH_TYPE==4, \"STYLECOLOR\", iif(MERCH_TYPE==0, \"STYLE\", iif(MERCH_TYPE==2, \"CLASS\", iif(MERCH_TYPE==6, \"DIV\", \"OTHER\")))),",
				"          DIVISION = iif(isNull(DIVISION), toInteger(null()), DIVISION),",
				"          GROUP_NO = iif(isNull(GROUP_NO), toInteger(null()), GROUP_NO),",
				"          DEPT = iif(isNull(DEPT), toInteger(null()), DEPT),",
				"          CLASS = iif(isNull(CLASS), toInteger(null()), CLASS),",
				"          SUBCLASS = iif(isNull(SUBCLASS), toInteger(null()), SUBCLASS),",
				"          DIFF_ID = iif(isNull(DIFF_ID), toString(null()), DIFF_ID),",
				"          ITEM = iif(isNull(ITEM), toString(null()), ITEM),",
				"          START_DATE = iif(isNull(START_DATE), toDate(null()), toDate(START_DATE)),",
				"          END_DATE = iif(isNull(END_DATE), toDate(null()), toDate(END_DATE)),",
				"          THRESHOLD_QUANTITY = iif(isNull(THRESHOLD_QUANTITY), toInteger(null()), toInteger(THRESHOLD_QUANTITY)),",
				"          LOCATION = iif(isNull(LOCATION), toInteger(null()), LOCATION),",
				"          CRT_UPDT_USER_ID = iif(isNull(CRT_UPDT_USER_ID), toString(null()), CRT_UPDT_USER_ID),",
				"          MESSAGE_KEY = '',",
				"          ACTION_TO_BE_TAKEN = iif(STATUS=='F', 'PLEASE REACH TO RPM TEAM FOR MORE DETAILS ON FAILURE', 'PLEASE REFER THE ERROR DESCRI')) ~> XApprovePromoErr",
				"XApprovePromoErr select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          IPT_PROMO_ID = PMOTN_REQ_ID_S,",
				"          RPM_PROMO_ID = PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIVISION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          START_DATE,",
				"          END_DATE,",
				"          THRESHOLD_QUANTITY,",
				"          PROMO_NAME,",
				"          LOCATION,",
				"          CURRENCY_CODE,",
				"          CRT_UPDT_USER_ID,",
				"          MESSAGE_KEY,",
				"          ERR_MSG_TXT,",
				"          ACTION_TO_BE_TAKEN",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> outAppr",
				"outAppr aggregate(groupBy(ITEM,",
				"          DIFF_ID,",
				"          RPM_PROMO_ID,",
				"          LOCATION),",
				"     each(match(!in(['ITEM','DIFF_ID','RPM_PROMO_ID','LOCATION'],name)), $$ = first($$))) ~> RemoveDuplicatesItem",
				"RemoveDuplicatesItem select(mapColumn(",
				"          IPT_PROMO_ID,",
				"          RPM_PROMO_ID,",
				"          MERCH_TYPE,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          LOCATION,",
				"          GROUP_NO,",
				"          DEPT,",
				"          CLASS,",
				"          SUBCLASS,",
				"          DIFF_ID,",
				"          ITEM,",
				"          START_DATE,",
				"          END_DATE,",
				"          THRESHOLD_QUANTITY,",
				"          PROMO_NAME,",
				"          LOCATION,",
				"          CURRENCY_CODE,",
				"          CRT_UPDT_USER_ID,",
				"          MESSAGE_KEY,",
				"          ERR_MSG_TXT,",
				"          ACTION_TO_BE_TAKEN",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> liItem",
				"LPromoID select(mapColumn(",
				"          PROMO_ID = foBrdMktChnl@PROMO_ID,",
				"          PROMO_NAME = foBrdMktChnl@PROMO_NAME,",
				"          COMP_DISPLAY_ID,",
				"          PROMO_COMP_ID,",
				"          PROMO_COMP_DETAIL_ID,",
				"          PROMO_COMP_DETAIL_DISPLAY_ID,",
				"          THRESHOLD_ID,",
				"          THRESHOLD_DISPLAY_ID,",
				"          MERCH_TYPE = foBrdMktChnl@MERCH_TYPE,",
				"          DIVISION = foBrdMktChnl@DIVISION,",
				"          GROUP_NO = foBrdMktChnl@GROUP_NO,",
				"          DEPT = foBrdMktChnl@DEPT,",
				"          CLASS = foBrdMktChnl@CLASS,",
				"          SUBCLASS = foBrdMktChnl@SUBCLASS,",
				"          DIFF_ID = foBrdMktChnl@DIFF_ID,",
				"          ITEM = foBrdMktChnl@ITEM,",
				"          ATTRIBUTE_1,",
				"          ATTRIBUTE_2,",
				"          ATTRIBUTE_3,",
				"          ZONE_NODE_TYPE,",
				"          ZONE_ID,",
				"          LOCATION = foBrdMktChnl@LOCATION,",
				"          APPLY_TO_CODE = foBrdMktChnl@APPLY_TO_CODE,",
				"          START_DATE = foBrdMktChnl@START_DATE,",
				"          END_DATE = foBrdMktChnl@END_DATE,",
				"          IGNORE_CONSTRAINTS,",
				"          THRESHOLD_NAME,",
				"          CURRENCY_CODE = foBrdMktChnl@CURRENCY_CODE,",
				"          QUALIFICATION_TYPE,",
				"          THRESHOLD_TYPE,",
				"          THRESHOLD_AMOUNT,",
				"          THRESHOLD_CURRENCY,",
				"          THRESHOLD_QUANTITY = foBrdMktChnl@THRESHOLD_QUANTITY,",
				"          CHANGE_TYPE = foBrdMktChnl@CHANGE_TYPE,",
				"          CHANGE_AMOUNT = foBrdMktChnl@CHANGE_AMOUNT,",
				"          CHANGE_CURRENCY = foBrdMktChnl@CHANGE_CURRENCY,",
				"          CHANGE_PERCENT = foBrdMktChnl@CHANGE_PERCENT,",
				"          CHANGE_UOM = foBrdMktChnl@CHANGE_UOM,",
				"          AUTO_APPROVE_IND,",
				"          PROCESS_ID,",
				"          STATUS = foBrdMktChnl@STATUS,",
				"          ERR_MSG_TXT = foBrdMktChnl@ERR_MSG_TXT,",
				"          PMOTN_REQ_ID_S,",
				"          BRD_ID,",
				"          MKT_ID,",
				"          { CHNL_ID},",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          CRT_UPDT_USER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> loPromoComplete",
				"liItem sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT222_Approved_Promotions_Errored_In_RPM.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SeqBRDAPPromo",
				"loPromoComplete sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('IPT22_ApprovedPromo_Complete_RPMStaging_',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> DSPromoComplete"
			]
		}
	}
}