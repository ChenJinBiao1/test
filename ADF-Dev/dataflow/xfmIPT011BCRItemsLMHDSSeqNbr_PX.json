{
	"name": "xfmIPT011BCRItemsLMHDSSeqNbr_PX",
	"properties": {
		"folder": {
			"name": "01-BCRItems"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_srcIPT011BCRItemsLegacyInd_PX_DS_LMHDS",
						"type": "DatasetReference"
					},
					"name": "DSLMHDSSource"
				},
				{
					"dataset": {
						"referenceName": "AB_LMHDS_LGCY_MDSE_HIER_T",
						"type": "DatasetReference"
					},
					"name": "IPTLMHDSSource"
				},
				{
					"dataset": {
						"referenceName": "AB_MHIERSEQNBR_LGCY",
						"type": "DatasetReference"
					},
					"name": "IPTUMHDSRejRecSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT011BCRItemsUMHDSSeqNbr_PX_DS_LMHDSLoad",
						"type": "DatasetReference"
					},
					"name": "DSLMHDSLOAD1"
				}
			],
			"transformations": [
				{
					"name": "LLMHDSSeqNbrLookup"
				},
				{
					"name": "CheckLLMHDSSeqNbrLookup"
				},
				{
					"name": "LLMHDSSeqNbrLookupMatch"
				},
				{
					"name": "LRejSeqNbrLookup"
				},
				{
					"name": "LLMHDSSeqNbrLookupNotMatchSelect"
				},
				{
					"name": "FLMHDSSeqNbrUnion"
				},
				{
					"name": "LLMHDSSeqNbrLookupMatchSelect"
				},
				{
					"name": "LRejSeqNbrLookupSelect"
				},
				{
					"name": "NotMatchDerivedColumn"
				},
				{
					"name": "IPTUMHDSRejRecDerivedColumn"
				},
				{
					"name": "RDDistinctSubClass"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CO_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as string,",
				"          DIV_DESC as string,",
				"          DEPT_ID as string,",
				"          DEPT_DESC as string,",
				"          CLS_ID as string,",
				"          CLS_DESC as string,",
				"          SCLS_ID as string,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as integer,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as integer,",
				"          SEASON_DESC as string,",
				"          MKT_DIFF1_ID as string,",
				"          MKT_DIF2_ID as string,",
				"          ITM_SKU_NBR as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSLMHDSSource",
				"source(output(",
				"          LGCY_MDSE_HIER_SEQ_NBR_S as integer,",
				"          CORP_ID as string,",
				"          MDSE_CO_ID as string,",
				"          MDSE_DIV_ID as string,",
				"          MDSE_DEPT_ID as string,",
				"          MDSE_CLS_ID as string,",
				"          MDSE_SCLS_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTLMHDSSource",
				"source(output(",
				"          LGCY_MDSE_HIER_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTUMHDSRejRecSource",
				"RDDistinctSubClass, IPTLMHDSSource lookup(RDDistinctSubClass@CORP_ID == IPTLMHDSSource@CORP_ID",
				"     && CO_ID == MDSE_CO_ID",
				"     && DIV_ID == MDSE_DIV_ID",
				"     && DEPT_ID == MDSE_DEPT_ID",
				"     && CLS_ID == MDSE_CLS_ID",
				"     && SCLS_ID == MDSE_CLS_ID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LLMHDSSeqNbrLookup",
				"LLMHDSSeqNbrLookup derive(IsMatch = isMatch()) ~> CheckLLMHDSSeqNbrLookup",
				"CheckLLMHDSSeqNbrLookup split(IsMatch==true(),",
				"     disjoint: false) ~> LLMHDSSeqNbrLookupMatch@(LLMHDSSeqNbrLookupMatch, LLMHDSSeqNbrLookupNotMatch)",
				"NotMatchDerivedColumn, IPTUMHDSRejRecDerivedColumn lookup(NotMatchDerivedColumn@AddColumn == IPTUMHDSRejRecDerivedColumn@AddColumn,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LRejSeqNbrLookup",
				"LLMHDSSeqNbrLookupMatch@LLMHDSSeqNbrLookupNotMatch select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CO_ID,",
				"          CORP_ID = LLMHDSSeqNbrLookupMatch@LLMHDSSeqNbrLookupNotMatch@CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          LGCY_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LLMHDSSeqNbrLookupNotMatchSelect",
				"LLMHDSSeqNbrLookupMatchSelect, LRejSeqNbrLookupSelect union(byName: true)~> FLMHDSSeqNbrUnion",
				"LLMHDSSeqNbrLookupMatch@LLMHDSSeqNbrLookupMatch select(mapColumn(",
				"          CORP_ID = LLMHDSSeqNbrLookupMatch@LLMHDSSeqNbrLookupMatch@CORP_ID,",
				"          CO_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_DESC,",
				"          DEPT_DESC,",
				"          CLS_DESC,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_CC_NBR,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIFF1_ID,",
				"          MKT_DIF2_ID,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          LGCY_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LLMHDSSeqNbrLookupMatchSelect",
				"LRejSeqNbrLookup select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CO_ID,",
				"          CORP_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          MKT_DIFF1_ID,",
				"          ITM_STY_CC_NBR,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIF2_ID,",
				"          LGCY_IND,",
				"          LGCY_MDSE_HIER_SEQ_NBR_S = LLMHDSSeqNbrLookupNotMatchSelect@LGCY_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LRejSeqNbrLookupSelect",
				"LLMHDSSeqNbrLookupNotMatchSelect derive(AddColumn = 1) ~> NotMatchDerivedColumn",
				"IPTUMHDSRejRecSource derive(AddColumn = 1) ~> IPTUMHDSRejRecDerivedColumn",
				"DSLMHDSSource aggregate(groupBy(CORP_ID,",
				"          CO_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID),",
				"     each(match(!in(['CORP_ID','CO_ID','DIV_ID','DEPT_ID','CLS_ID','SCLS_ID'],name)), $$ = first($$))) ~> RDDistinctSubClass",
				"FLMHDSSeqNbrUnion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          CHNL_ID as string,",
				"          BRD_DESC as string,",
				"          MKT_DESC as string,",
				"          CORP_ID as string,",
				"          CO_ID as string,",
				"          CORP_DESC as string,",
				"          CO_DESC as string,",
				"          DIV_ID as string,",
				"          DIV_DESC as string,",
				"          DEPT_ID as string,",
				"          DEPT_DESC as string,",
				"          CLS_ID as string,",
				"          CLS_DESC as string,",
				"          SCLS_ID as string,",
				"          SCLS_DESC as string,",
				"          ITM_STY_NBR as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          ITM_STY_CC_NBR as string,",
				"          PRGM_NBR as string,",
				"          PRGM_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string,",
				"          SEASON_CD as string,",
				"          SEASON_YR as string,",
				"          SEASON_DESC as string,",
				"          MKT_DIFF1_ID as string,",
				"          MKT_DIF2_ID as string,",
				"          ITM_SKU_NBR as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          LGCY_MDSE_HIER_SEQ_NBR_S as string",
				"     ),",
				"     partitionFileNames:[(concat('xfmIPT011BCRItemsUMHDSSeqNbr_PX.DS_LMHDSLoad.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          BRD_DESC,",
				"          MKT_DESC,",
				"          CORP_ID,",
				"          CO_ID,",
				"          CORP_DESC,",
				"          CO_DESC,",
				"          DIV_ID,",
				"          DIV_DESC,",
				"          DEPT_ID,",
				"          DEPT_DESC,",
				"          CLS_ID,",
				"          CLS_DESC,",
				"          SCLS_ID,",
				"          SCLS_DESC,",
				"          ITM_STY_NBR,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_CC_NBR,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_CD,",
				"          SEASON_YR,",
				"          SEASON_DESC,",
				"          MKT_DIFF1_ID,",
				"          MKT_DIF2_ID,",
				"          ITM_SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          LGCY_MDSE_HIER_SEQ_NBR_S",
				"     ),",
				"     partitionBy('hash', 1)) ~> DSLMHDSLOAD1"
			]
		}
	}
}