{
	"name": "xfmIPT014BCRItemsItemSkuNbr_PX_COPY",
	"properties": {
		"folder": {
			"name": "01-BCRItems"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT013BCRItemsStyClrSeqNbr_PX_DS_ITMSTY_ITMSCC_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSITMSTYITMSCCSource"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT013BCRItemsStyClrSeqNbr_PX_DS_ITMSTY_ITMSCC_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSItemsSource"
				},
				{
					"dataset": {
						"referenceName": "AB_ITMSTY_ITM_STY_T_SEQ_NBR_S",
						"type": "DatasetReference"
					},
					"name": "IPTITMSTYSource"
				},
				{
					"dataset": {
						"referenceName": "AB_ITMSCC_ITM_STY_CC_T_CLR_SEQ_NBR_S",
						"type": "DatasetReference"
					},
					"name": "IPTITMSCCSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AB_xfmIPT014BCRItemsItemSkuNbr_PX_DS_SkuNb_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSSkuNbrSink"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT014BCRItemsItemSkuNbr_PX_FF_ItmSty_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFItemStySink"
				},
				{
					"dataset": {
						"referenceName": "AB_ldIPT014BCRItemsITMSCC_PX_DS_UHILV_LHILV_ASIA",
						"type": "DatasetReference"
					},
					"name": "DSUHILVLHILV"
				},
				{
					"dataset": {
						"referenceName": "AB_xfmIPT014BCRItemsItemSkuNbr_PX_FF_ItemStyCC_ASIA",
						"type": "DatasetReference"
					},
					"name": "FFItemStyCC"
				}
			],
			"transformations": [
				{
					"name": "XITSKUDerivedColumn"
				},
				{
					"name": "XITSKUSelect"
				},
				{
					"name": "RDItmStyClrSelect"
				},
				{
					"name": "LITMSTYLookup"
				},
				{
					"name": "LITMSTYDerivedColumn"
				},
				{
					"name": "LITMSTYSplit"
				},
				{
					"name": "LITMSTYNotMatchSelect"
				},
				{
					"name": "LITMSTYMatchSelect"
				},
				{
					"name": "LITMSCCLookup"
				},
				{
					"name": "LITMSCCDerivedColumn"
				},
				{
					"name": "LITMSCCSplit"
				},
				{
					"name": "LITMSCCNotMatchSelect"
				},
				{
					"name": "LITMSCCMatchSelect"
				},
				{
					"name": "RDSKU"
				},
				{
					"name": "RDSKUSelect"
				},
				{
					"name": "RDItmStyClr"
				}
			],
			"scriptLines": [
				"parameters{",
				"     jsUserId as string ('PIPT014U'),",
				"     pInvocationId as string ('ASIA')",
				"}",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          CO_ID as string,",
				"          CORP_ID as string,",
				"          DIV_ID as string,",
				"          DEPT_ID as string,",
				"          CLS_ID as string,",
				"          SCLS_ID as string,",
				"          GLBL_ITM_STY_CC_NBR as string,",
				"          GLBL_ITM_STY_NBR as string,",
				"          {GLBL_SKU_NBR } as string,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          MDSE_HIER_SEQ_NBR_S as integer,",
				"          SEASON_DESC as string,",
				"          PRGM_NBR as integer,",
				"          PRGM_DESC as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSITMSTYITMSCCSource",
				"source(output(",
				"          BRD_ID as integer,",
				"          MKT_ID as string,",
				"          CHNL_ID as integer,",
				"          CO_ID as string,",
				"          CORP_ID as string,",
				"          DIV_ID as integer,",
				"          DEPT_ID as integer,",
				"          CLS_ID as integer,",
				"          SCLS_ID as integer,",
				"          GLBL_ITM_STY_CC_NBR as string,",
				"          GLBL_ITM_STY_NBR as string,",
				"          {GLBL_SKU_NBR } as string,",
				"          ITM_STY_CLR_SEQ_NBR_S as integer,",
				"          ITM_STY_SEQ_NBR_S as integer,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          MDSE_HIER_SEQ_NBR_S as integer,",
				"          SEASON_DESC as string,",
				"          PRGM_NBR as integer,",
				"          PRGM_DESC as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DSItemsSource",
				"source(output(",
				"          ITM_STY_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTITMSTYSource",
				"source(output(",
				"          ITM_STY_CLR_SEQ_NBR_S as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IPTITMSCCSource",
				"RDSKUSelect derive(ITM_STY_CLR_SEQ_NBR_S = ITM_STY_CLR_SEQ_NBR_S,",
				"          SKU_NBR = {GLBL_SKU_NBR },",
				"          ITM_SKU_DESC = iif(trim(ITM_SKU_DESC) == '','',trim(ITM_SKU_DESC)),",
				"          ITM_SKU_ABBR_DESC = iif(trim(ITM_SKU_ABBR_DESC)=='','  ',trim(ITM_SKU_ABBR_DESC)),",
				"          SZ_CD = right('0000'+ SZ_CD,4),",
				"          SZ_MDL_CD = iif(trim(SZ_M_CD)=='','  ',SZ_M_CD),",
				"          SZ_DESC = iif(trim(SZ_DESC)=='', '  ', trim(SZ_DESC)),",
				"          CRT_UPDT_USER_ID = $jsUserId,",
				"          CRT_UPDT_DTTM = currentDate(),",
				"          LST_UPDT_USER_ID = $jsUserId,",
				"          LST_UPDT_DTTM = currentDate(),",
				"          MKT_ID = MKT_ID) ~> XITSKUDerivedColumn",
				"XITSKUDerivedColumn select(mapColumn(",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          {SKU_NBR } = SKU_NBR,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_MDL_CD,",
				"          SZ_DESC,",
				"          CRT_UPDT_USER_ID,",
				"          CRT_UPDT_DTTM,",
				"          LST_UPDT_USER_ID,",
				"          LST_UPDT_DTTM,",
				"          MKT_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> XITSKUSelect",
				"RDItmStyClr select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          SEASON_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RDItmStyClrSelect",
				"RDItmStyClrSelect, IPTITMSTYSource lookup(RDItmStyClrSelect@ITM_STY_SEQ_NBR_S == IPTITMSTYSource@ITM_STY_SEQ_NBR_S,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LITMSTYLookup",
				"LITMSTYLookup derive(IsMatch = isMatch()) ~> LITMSTYDerivedColumn",
				"LITMSTYDerivedColumn split(IsMatch==true(),",
				"     disjoint: false) ~> LITMSTYSplit@(LITMSTYLookupMatch, LITMSTYLookupNotMatch)",
				"LITMSTYSplit@LITMSTYLookupNotMatch select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SEASON_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          GLBL_ITM_STY_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S = LITMSTYSplit@LITMSTYLookupNotMatch@ITM_STY_SEQ_NBR_S,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_SEQ_NBR_S = LITMSTYSplit@LITMSTYLookupNotMatch@ITM_STY_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LITMSTYNotMatchSelect",
				"LITMSTYSplit@LITMSTYLookupMatch select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SEASON_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          GLBL_ITM_STY_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S = LITMSTYSplit@LITMSTYLookupMatch@ITM_STY_SEQ_NBR_S,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          ITM_STY_SEQ_NBR_S = LITMSTYSplit@LITMSTYLookupMatch@ITM_STY_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LITMSTYMatchSelect",
				"LITMSTYMatchSelect, IPTITMSCCSource lookup(LITMSTYMatchSelect@ITM_STY_CLR_SEQ_NBR_S == IPTITMSCCSource@ITM_STY_CLR_SEQ_NBR_S,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LITMSCCLookup",
				"LITMSCCLookup derive(IsMatch = isMatch()) ~> LITMSCCDerivedColumn",
				"LITMSCCDerivedColumn split(IsMatch==true(),",
				"     disjoint: true) ~> LITMSCCSplit@(LITMSCCLookupMatch, LITMSCCLookupNotMatch)",
				"LITMSCCSplit@LITMSCCLookupNotMatch select(mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SEASON_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          GLBL_ITM_STY_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_CLR_SEQ_NBR_S = LITMSCCSplit@LITMSCCLookupNotMatch@ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LITMSCCNotMatchSelect",
				"LITMSCCSplit@LITMSCCLookupMatch select(mapColumn(",
				"          BRD_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          PRGM_NBR,",
				"          LGCY_IND,",
				"          ITM_STY_CLR_SEQ_NBR_S = LITMSCCSplit@LITMSCCLookupMatch@ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_CLR_SEQ_NBR_S = LITMSCCSplit@LITMSCCLookupMatch@ITM_STY_CLR_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LITMSCCMatchSelect",
				"DSITMSTYITMSCCSource aggregate(groupBy(MKT_ID),",
				"     each(match(!in(['MKT_ID','GLBL_SKU_NBR'],name)), $$ = first($$)),",
				"     partitionBy('hash', 1)) ~> RDSKU",
				"RDSKU select(mapColumn(",
				"          MKT_ID,",
				"          BRD_ID,",
				"          CHNL_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC,",
				"          SEASON_DESC,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          {GLBL_SKU_NBR },",
				"          CO_ID,",
				"          ITM_STY_CLR_SEQ_NBR_S",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RDSKUSelect",
				"DSItemsSource aggregate(groupBy(ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_CLR_SEQ_NBR_S),",
				"     each(match(!in(['ITM_STY_SEQ_NBR_S','ITM_STY_CLR_SEQ_NBR_S'],name)), $$ = first($$))) ~> RDItmStyClr",
				"XITSKUSelect sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ITM_STY_CLR_SEQ_NBR_S as string,",
				"          {SKU_NBR } as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_MDL_CD as string,",
				"          SZ_DESC as string,",
				"          CRT_UPDT_USER_ID as string,",
				"          CRT_UPDT_DTTM as string,",
				"          LST_UPDT_USER_ID as string,",
				"          LST_UPDT_DTTM as string,",
				"          MKT_ID as string",
				"     ),",
				"     partitionFileNames:[(concat('xfmIPT014BCRItemsItemSkuNbr_PX.DS_SkuNbr.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          {SKU_NBR },",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          SZ_CD,",
				"          SZ_MDL_CD,",
				"          SZ_DESC,",
				"          CRT_UPDT_USER_ID,",
				"          CRT_UPDT_DTTM,",
				"          LST_UPDT_USER_ID,",
				"          LST_UPDT_DTTM,",
				"          MKT_ID",
				"     ),",
				"     partitionBy('hash', 1)) ~> DSSkuNbrSink",
				"LITMSTYNotMatchSelect sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          CHNL_ID as string,",
				"          CO_ID as string,",
				"          CORP_ID as string,",
				"          DIV_ID as string,",
				"          DEPT_ID as string,",
				"          CLS_ID as string,",
				"          SCLS_ID as string,",
				"          GLBL_ITM_STY_NBR as string,",
				"          GLBL_ITM_STY_CC_NBR as string,",
				"          {GLBL_SKU_NBR } as string,",
				"          ITM_STY_SEQ_NBR_S as string,",
				"          ITM_STY_CLR_SEQ_NBR_S as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          MDSE_HIER_SEQ_NBR_S as string,",
				"          SEASON_DESC as string,",
				"          PRGM_NBR as string,",
				"          PRGM_DESC as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string",
				"     ),",
				"     partitionFileNames:[(concat('xfmIPT014BCRItemsItemSkuNbr_PX.FF_ItmSty.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          SEASON_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC",
				"     ),",
				"     partitionBy('hash', 1)) ~> FFItemStySink",
				"LITMSCCMatchSelect sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat('ldIPT014BCRItemsITMSCC_PX.DS_UHILV_LHILV.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BRD_ID,",
				"          CORP_ID,",
				"          CO_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          PRGM_NBR,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_STY_SEQ_NBR_S,",
				"          LGCY_IND",
				"     ),",
				"     partitionBy('hash', 1)) ~> DSUHILVLHILV",
				"LITMSCCNotMatchSelect sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BRD_ID as string,",
				"          MKT_ID as string,",
				"          CHNL_ID as string,",
				"          CO_ID as string,",
				"          CORP_ID as string,",
				"          DIV_ID as string,",
				"          DEPT_ID as string,",
				"          CLS_ID as string,",
				"          SCLS_ID as string,",
				"          GLBL_ITM_STY_NBR as string,",
				"          GLBL_ITM_STY_CC_NBR as string,",
				"          {GLBL_SKU_NBR } as string,",
				"          ITM_STY_SEQ_NBR_S as string,",
				"          ITM_STY_CLR_SEQ_NBR_S as string,",
				"          ITM_SKU_DESC as string,",
				"          ITM_SKU_ABBR_DESC as string,",
				"          LGCY_IND as string,",
				"          MDSE_HIER_SEQ_NBR_S as string,",
				"          SEASON_DESC as string,",
				"          PRGM_NBR as string,",
				"          PRGM_DESC as string,",
				"          ITM_STY_DESC as string,",
				"          ITM_STY_CLR_DESC as string,",
				"          SZ_CD as string,",
				"          SZ_M_CD as string,",
				"          SZ_DESC as string",
				"     ),",
				"     partitionFileNames:[(concat('xfmIPT014BCRItemsItemSkuNbr_PX.FF_ItemStyCC.',$pInvocationId,'.txt'))],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BRD_ID,",
				"          MKT_ID,",
				"          CHNL_ID,",
				"          CO_ID,",
				"          CORP_ID,",
				"          DIV_ID,",
				"          DEPT_ID,",
				"          CLS_ID,",
				"          SCLS_ID,",
				"          GLBL_ITM_STY_NBR,",
				"          GLBL_ITM_STY_CC_NBR,",
				"          {GLBL_SKU_NBR },",
				"          ITM_STY_SEQ_NBR_S,",
				"          ITM_STY_CLR_SEQ_NBR_S,",
				"          ITM_SKU_DESC,",
				"          ITM_SKU_ABBR_DESC,",
				"          LGCY_IND,",
				"          MDSE_HIER_SEQ_NBR_S,",
				"          SEASON_DESC,",
				"          PRGM_NBR,",
				"          PRGM_DESC,",
				"          ITM_STY_DESC,",
				"          ITM_STY_CLR_DESC,",
				"          SZ_CD,",
				"          SZ_M_CD,",
				"          SZ_DESC",
				"     ),",
				"     partitionBy('hash', 1)) ~> FFItemStyCC"
			]
		}
	}
}